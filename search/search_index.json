{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to xOffFieldSoilRisk (xSR)","text":"<p>Welcome to the xOffFieldSoilRisk (xSR) documentation. This documentation provides an introduction and will walk new users through how to get started with the xOffFieldSoilRisk landscape model, including explanations for sample scenarios and their use.  </p>"},{"location":"index.html#publication","title":"Publication","text":"<p>An introduction to the topic is given in an open access publication in IEAM: A spatiotemporally explicit modeling approach for more realistic exposure and risk assessment of off-field soil organisms. The xOffFieldSoilRisk approach has been presented at different scientific conferences, eg:  </p> <ul> <li>Presentation at SETAC Europe 2025</li> <li>Poster on 'Landscape level simulation of off-field exposure by run-off'</li> <li>Poster on 'Runoff/erosion deposition'</li> </ul> <p>The xOffFieldSoilRisk model and examplary scenarios are published on Github (section Get Started)  </p>"},{"location":"index.html#background","title":"Background","text":"<p>The authorization process of plant protection products (PPPs) includes comprehensive regulatory risk assessment (RA) for nontarget species, including soil organisms. The European Food Safety Authority (EFSA) has released a scientific opinion on \u201caddressing the state of the science on RA of PPPs for in-soil organisms\u201d (EFSA PPR Panel, 2017), in which spray-drift depositions and runoff are identified as the most relevant potential exposure routes of off-field soil organisms, whereby the term \u201coff-field\u201d refers to areas outside the agricultural field boundaries, that is, essentially to (semi-) natural areas present in cultivated landscapes.  </p> <p> </p> <p>Illustration of Off-Field-Soil definition  </p> <p>The EFSA PPR Panel (2017) outlined a first approach to estimate off-field soil exposure. The conservative character of the approach and the necessity for model and scenario development are indicated in EFSA PPR Panel (2017): \u201cIn the absence of appropriate off-field exposure scenarios\u2026 Since such models are not yet available for regulatory purposes at the European level, the simplifying assumption is made that the individual exposure routes can be assessed separately. Results of the different entry routes should then be summed, which is a conservative assumption because it neglects the different dynamic behavior of the processes.\u201d  </p>"},{"location":"index.html#introduction","title":"Introduction","text":"<p>With the background above, the aims for the present work are to develop a model approach to appropriately combine off-field soil exposure due to runoff and drift and to develop example scenarios based on real-world conditions. xOffFieldSoilRisk is built on the basis of the xLandscape framework. xLandscape provides a modular approach to develop landscape models which operate spatiotemporally explicit. xLandscape is open source. In its initial version, xOffFieldSoil has been composed using exposure models which are established in the regulatory scientific exposure assessment of pesticides in Europe (eg, FOCUSsw). However, these models are not open source and come with limitations for their spatiotemporally explicit operation with a large number of local conditions as typical at landscape-level. Future versions of xOffFieldSoilRisk are intended to consider exposure modules more adapted for integrating in landscape-level applications.  </p>"},{"location":"index.html#xsr-outcome-for-risk-assessments","title":"xSR Outcome for Risk Assessments","text":"<p>Basically, xOffFieldSoilRisk model outcome aims to be to be directly used in off-field-soil RAs. To this end, exposure endpoints need to be developed that fit into current RA schemes, in particular to lower-tier TER (Toxicity Exposure Ratio) and RQ (Risk Quotion) based approaches. Thus, raw spatiotemporally explicit model outcome needs to be aggregated into ready-to-use exposure values. To keep this process transparent, we propose a stepwise approach, including visualisations, to enable an understanding of the level of conservatism of aggregated exposure values. Therefore, at the present initial phase, this process is implemented as Jupyter Notebooks and R. The analysis steps can be executed manually (and adapted) using the Jupyter Notebooks, or can be conducted automatically at the end of an xSR model run (as xSR component).  </p> <p>A second option to use xSR model output is to link xSR directly with effect models (eg, TKTD, Folsomia, Eisenia, Earthworms). These effect models will be implemented as components (moduls) and integrated into xSR and will deliver RA endpoints at the level of defined SPGs (Specific Protection Goals, EFSA PPR Panel 2017)), eg, on species population level.  Although at scientific and technical level the necessary bits and pieces are ready, the establishment of landscape-level SPG endpoints in regulatory RA and risk management studies needs further development.  </p>"},{"location":"index.html#xsr-use-for-regulatory-research-development","title":"xSR Use for Regulatory Research &amp; Development","text":"<p>More realistic RA and risk management, more holistic evaluation of pesticide risk, integrated pest assessment, integrated cost/benefit ecosystem service assessments, are currently intensely discussed topics with a need for tools and data. Among the already and more precisely defined topics for development is to build consistent lower tier approaches from reasonably realistic 'Reference Scenario' levels. The latter directly calls for landscape-level exposure and effect modelling on the basis of resonably realistic scenarios. The conceptual developments and modular implementation of xSR might contribute to these developments in the regulatory scientific community.  </p> <p> </p> <p>Illustration of the potential of xOffFieldSoilRisk to support the development of lower-tier approaches from landscape-level analysis: for the persistent substance Lindane, analysed assessment endpoints (percentiles of PECsoil of time and space) are significantly below a worst-case approach (based on FOCUSsw-Step2) and below the maximum single values in space and time observed in edge-of-field and landscape scenarios. The single extreme value observed at one point in time and one off-field soil 1m2 shows that the xSR approach can also reproduce very unfavorouble conditions in real-world landscapes.  </p>"},{"location":"index.html#implementation","title":"Implementation","text":""},{"location":"index.html#xlandscape-framework","title":"xLandscape Framework","text":"<p>xSR was built using the modular landscape modelling framework xLandscape. The framework allows to compose individual modules, called Components to landscape models which operate spatiotemporally explicit. The components represent and encapsulate distinct functionality. Any component can be replaced by more or less complex ones.  </p>"},{"location":"index.html#xofffieldsoilrisk-landscape-model","title":"xOffFieldSoilRisk Landscape Model","text":"<p>The initial implementation of xSR was guided by EFSA (2017) and established approaches (models) in regulatory RA. The figure below shows the components (modules) from which xSR is built. Each exposure route and process is represented by a specific component, which can be replaced to adapt xSR model complexity. Please find details in the open access publication \"A spatiotemporally explicit modeling approach for more realistic exposure and risk assessment of off-field soil organisms\".  </p> <p> </p> <p>xOffFieldSoil model scheme. The model is composed of components (boxes in the central panel, e.g., xDrift). Components provide major model functionality (e.g., spray\u2010drift or runoff exposure calculation) and are built by wrapping existing models (e.g., PRZM, Pesticide Root Zone Model) or by developing new ones (e.g., \u201cRunoffFilter1\u201d). The implementation of xOffFieldSoil is based on the generic modular xLandscape modeling framework. The light gray boxes represent xOffFieldSoil components that were not used in the case study, although they do exist or are under development. Preparation and analysis panels contain tools, for example, for data preparation and risk analysis of model outcome and operate closely with the framework, yet are not part of the core xOffFieldSoil model.  </p>"},{"location":"index.html#scenarios","title":"Scenarios","text":"<p>xSR can be used in any region for which the minimum required geodata can be acquired (or generated) and prepared. xSR is shipped with ready-to-use example scenarios which can also serve as templates for own scenario development. An introduction and details to scenario development is given in the Scenarios section.  </p>"},{"location":"index.html#outlook","title":"Outlook","text":"<p>The following topics are among the ongoing or discussed future developments:  </p> <ul> <li>Tutorial and training</li> <li>Enhanced and simplified runoff components (modules)</li> <li>Scenario building tools</li> <li>UI, webrowser-based parameterisation and model use</li> <li>Extended analysis and visualisation functionality</li> <li>Standardisation of model outpts and reporting (as discussed in the regulatory scientific community)</li> </ul> <p>Beyond model and scenario development, and besides further case studies which are required to extend insights into risk drivers of off-field soil organismsm, the exchange in the regulatory-scientific community of pesticide RA is key to sustainably create value from this initiative.  </p>"},{"location":"index.html#acknowledgements","title":"Acknowledgements","text":"<p>The development of the xSR landscape model was initiated by Thorsten Schad (tschadwork@gmail.com). It's realisation was only possibly due to the contribution of colleagues listed below and the sponsoring by Bayer AG.  </p> Role / Activity Person Idea and Initiative Thorsten Schad Demand Evaluation Gregor Ernst (Bayer), Thomas Preuss (Bayer), Thorsten Schad Goals and Requirements Thorsten Schad, Sascha Bub (RPTU) Design Thorsten Schad, Sascha Bub Implementation xOffFieldSoilRisk landscape model: Sascha Bub, Thorsten Schad. Runoff-Component: Joachim Kleinmann, Magnus Wang, Sascha Bub, Thorsten Schad. Analysis: Sascha Bub, Claire Holmes (AAS), Thorsten Schad Testing Thorsten Schad, Theo Schad (Bayer Intern), Sascha Bub, Chris Holmes (AAS) Scenarios Thorsten Schad, Sascha Bub Publication Github: Sascha Bub, Thorsten Schad. IEAM (4798): see 'Author Contribution'. Conferences: see section Publication above"},{"location":"index.html#references","title":"References","text":"<p>Bub, S., Schad, T., Gao, Z. 2020. XDrift\u2014An R package to simulate spatially explicit pesticide spray-drift exposure of non-target-species habitats at landscape scales. </p> <p>EFSA PPR Panel. 2017. Scientific Opinion addressing the state of the science on risk assessment of plant protection products for in\u2010soil organisms. EFSA Journal. Wiley Online Library.  </p> <p>Valery E Forbes, Annika Agatz, Roman Ashauer, Kevin R Butt, Yvan Capowiez, Sabine Duquesne, Gregor Ernst, Andreas Focks, Andre Gergs, Mark E Hodson, Martin Holmstrup, Alice SA Johnston, Mattia Meli, Dirk Nickisch, Silvia Pieper, Kim J Rakel, Melissa Reed, Joerg Roembke, Ralf B Sch\u00e4fer, Pernille Thorbek, David J Spurgeon, Erik Van den Berg, Cornelis AM Van Gestel, Mathilde I Zorn, Vanessa Roeben, Mechanistic Effect Modeling of Earthworms in the Context of Pesticide Risk Assessment: Synthesis of the FORESEE Workshop, Integrated Environmental Assessment and Management, Volume 17, Issue 2, 1 March 2021, Pages 352\u2013363.  </p>"},{"location":"index.html#next-section-get-started","title":"next Section: Get Started","text":""},{"location":"getstarted/getstarted.html","title":"Get Started","text":"<p>Please contact Sascha Bub (sascha.bub@rptu.de) or Thorsten Schad (tschadwork@gmail.com) in case of questions.  </p>"},{"location":"getstarted/getstarted.html#initial-user-group","title":"Initial User Group","text":"<p>As described in section Home/Introduction, the xSR development was initiated due to new requirements in off-field-soil RA in Europe. Accordingly, the initial versions of xSR has a focus on this RA purpose, with and its user groups, namely soil exposure and effect modelling, as well as RA experts. However, as indicated in the Outlook section, the intention of the development of xSR is to stepwise facilitate xSR use to broader user groups.  </p>"},{"location":"getstarted/getstarted.html#installation","title":"Installation","text":"<p>Current xSR model and scenarios are provided for two technical user level:  </p> <ol> <li> <p>Users with Github expertise can directly clone the xSR model and scenarios from the public Github repositories:  </p> <ul> <li>xSR model</li> <li>Scenario NRW-1</li> <li>Scenario NRW-2</li> <li>Scenario NRW-3</li> </ul> <p>Cloning steps vary based on the application being used, eg. Sourcetree or Visual Studio Code.  </p> </li> <li> <p>Applied modellers in RA or research: People with expertise in using scientific models but do not work with Github can download a ready-to-use zip-package including the xSR model as well as the scenarios her: (xxx(under preparation) landscape.org/xxx)</p> </li> </ol> <p>After cloning the repository or downloading the zip-file (option 2), a user will have everything necessary to start using xSR including sample scenarios and parametrization files. Please contact Sascha Bub (sascha.bub@rptu.de) or Thorsten Schad (tschadwork@gmail.com) in case of questions.  </p>"},{"location":"getstarted/getstarted.html#test-run","title":"Test Run","text":"<p>To start xSR using the sample scenario, drag template.xrun onto __start__.bat. This will start an xSR run using the demo parameterisation. The demo parameterisation uses a simple edge-of-field 'Schematic Scenario' and Lindane as test substance, without risk mitigation measures. The test run makes use of 3 cpu cores and should not require more than 2 GB memory, as well as about 100 MB disk space. Computing time should be a couple of minutes on current machines.  </p> <p>xSR Outputs: </p> Output Type Location Experiment-level analysis and visualisations \\run\\xOffFieldSoilRisk-Testrun_1\\analysis Monto Carlo (MC) runs analysis and visualisations \\run\\xOffFieldSoilRisk-Testrun_1\\mcs\\[mc run ID]\\analysis Raw spatiotemporally explicit outputs \\run\\xOffFieldSoilRisk-Testrun_1\\mcs\\[mc run ID]\\store\\arr.dat Log-files \\run\\xOffFieldSoilRisk-Testrun_1\\log <p>We recommend to have a first look into a location of a MC runs analysis and visualisations and to consult the publications.  </p> <p>! Notes SimIDs need to be unique.     xSR will create a folder for each run using the SimID defined in the .xrun parameterisation file (eg, template.xrun). The SimID cannot be the same as a folder already contained in the run folder. If you want to run a simulation with the same SimID you need to delete this simulation folder first (from the ...\\run folder). PRZM Model behaviour     When PRZMeu is used as runoff component (as in the template run), the PRZM model shortly pops up on your Windows desktop, ie, gets focus and so might distract you from other work on your computer. This behaviour is by design of the PRZM model and Windows System and is unfortunately unavoidable. Temporary files     During runtime, xSR generates temporary files which use a specific folder. You need to either have C:\\temp on your drive,     or define your preferred folder in the parameterisation file (.xrun). In the latter case, make sure that the total length of the folder name is &lt;20 characters (due to PRZM model limitations).  </p>"},{"location":"getstarted/getstarted.html#parameterisation","title":"Parameterisation","text":"<p>xSR is built upon xLandscape. In the parameterisation of an xLandscape based model we distinguish two levels,  </p> <ul> <li>the parameterisation</li> <li>and the configuration level.  </li> </ul> <p>Model configuration allows to alter the behaviour of the xSR model (eg, spray-drift interpolation, runoff flow).  </p> <p>Model parameterisation refers to actual user inputs for the 'standard' use of xSR (eg, scenario choice, simulation period, pesticide use and properties). The base technical level of model parameterisation is an XML file. This has the .xrun file ending. Any XML editor can be used to define an .xrun parameterisation file. Which values (parameters) are available in .xrun can be adapted (see Technical Reference). Each parameter in .xrun comes with comments and is framed by corresponding XML tags. These comments should sufficiently explain the parameter purpose and technical details (eg, units). The following XML shows the template.xrun parameterisation file:  </p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;Parameters&gt;\n    &lt;!--\n    Parameter     :  Project\n    Description   :  The scenario used by the simulation.\n    Values        :  should be scenario/*** where *** is a folder name in the scenario sub-folder.\n    Remark        :  Make sure that the scenario is present in the scenario sub-folder.\n    --&gt;\n    &lt;Project&gt;scenario/schematic-100x100&lt;/Project&gt;\n\n    &lt;!--\n    Parameter     :  Modeller\n    Description   :  The name of the modeller.\n    Values        :  Any text.\n    Remark        :  This value is organizational metadata and is not used technically.\n    --&gt;\n    &lt;Modeller&gt;ts&lt;/Modeller&gt;\n\n    &lt;!--\n    Parameter     :  SimID\n    Description   :  Unique identifier of a simulation run.\n    Values        :  Any characters that are valid in file system identifiers.\n    Remark        :  Running a simulation with the same name as an existing simulation run results in an error.\n    Best practice :  Change this parameter with every simulation run. When doing test runs, indicate the test character\n                     of clearly in the identifier. If conducting a run from the experiment table, register it there and\n                     use the naming scheme &lt;experiment id&gt;-&lt;n&gt; where n is the number of the run.\n    --&gt;\n    &lt;SimID&gt;xOffFieldSoilRisk-Testrun_1&lt;/SimID&gt;\n\n    &lt;!--\n    Parameter     :  NumberMC\n    Description   :  The number of Monte Carlo runs.\n    Values        :  Any positive integer.\n    Remark        :  MC runs are conducted (partly) in parallel according to the NumberParallelProcesses parameter.\n    Best practice :  Always conduct multiple MC runs (except for technical tests), e.g., 3 for long-running simulations,\n                     30 for small simulations and 10 for anything in between.\n    --&gt;\n    &lt;NumberMC&gt;3&lt;/NumberMC&gt;\n\n    &lt;!--\n    Parameter     :  ParallelProcesses\n    Description   :  The number of Monte Carlo runs that are conducted simultaneously.\n    Values        :  Any positive integer.\n    Remark        :  This parameter should be modified according to the available hardware resources.\n    Best practice :  To best use the available hardware, apply this rule of thumb:\n                     min(NumberMC, NumberParallelProcesses) &lt;= available processors.\n    --&gt;\n    &lt;ParallelProcesses&gt;3&lt;/ParallelProcesses&gt;\n\n    &lt;!--\n    Parameter     :  Substance\n    Description   :  Used to name the substance that is applied during all applications.\n    Values        :  Any text.\n    Remark        :  The name itself is mostly a meta-datum but also used to distinguish different substances if\n                     multi-substance experiments are implemented in a future version.\n    --&gt;\n    &lt;Substance&gt;Lindane&lt;/Substance&gt;\n\n    &lt;!--\n    Parameter     :  DT50\n    Description   :  The soil DT50 of the substance in days.\n    Values        :  Positive numbers.\n    --&gt;\n    &lt;DT50&gt;148&lt;/DT50&gt;\n\n    &lt;!--\n    Parameter     :  KocSoil\n    Description   :  The soil KOC of the substance.\n    Values        :  Positive numbers.\n    --&gt;\n    &lt;KocSoil&gt;477&lt;/KocSoil&gt;\n\n    &lt;!--\n    Parameter     :  FreundlichExponent\n    Description   :  The Freundlich exponent of the substance.\n    Values        :  Positive numbers.\n    --&gt;\n    &lt;FreundlichExponent&gt;0.957&lt;/FreundlichExponent&gt;\n\n    &lt;!--\n    Parameter     :  ApplicationRate\n    Description   :  The application rate in g/ha.\n    Values        :  Any positive number (or zero).\n    Remark        :  The application rate applies to all applications within application sequences.\n    --&gt;\n    &lt;ApplicationRate&gt;2400&lt;/ApplicationRate&gt;\n\n    &lt;!--\n    Parameter     :  ApplicationWindow\n    Description   :  The time windows within which applications take place.\n    Values        :  format: MM-DD to MM-DD[, MM-DD to MM-DD[, ...]]\n    Remark        :  For each target field, year and application within an application sequence, a random date within\n                     the specified time window is selected. Example values:\n                     04-15 to 04-15 : All fields are applied on 15th of April every year\n                     04-07 to 04-21 : All fields are applied each year on a random date (per field and year) between 7th\n                                      and 21st of April\n                     04-07 to 04-21, 05-02 to 05-16 : All fields are applied twice each year; on a random date (per\n                                                      field and year) between 7th and 21st of April and on a random date\n                                                      (per field and year) between 2nd and 16th of May.\n    --&gt;\n    &lt;ApplicationWindows&gt;03-01 to 03-01&lt;/ApplicationWindows&gt;\n\n    &lt;!--\n    Parameter     :  SimulateRunOffExposure\n    Description   :  Controls whether run-off exposure is simulated or not.\n    Values        :  \"true\" or \"false.\n    Remark        :  At least one of SimulateRunOffExposure and SimulateSprayDriftExposure should be true.\n    --&gt;\n    &lt;SimulateRunOffExposure&gt;true&lt;/SimulateRunOffExposure&gt;\n\n    &lt;!--\n    Parameter     :  SimulateSprayDriftExposure\n    Description   :  Controls whether spray-drift exposure is simulated or not.\n    Values        :  \"true\" or \"false.\n    Remark        :  At least one of SimulateRunOffExposure and SimulateSprayDriftExposure should be true.\n    --&gt;\n    &lt;SimulateSprayDriftExposure&gt;true&lt;/SimulateSprayDriftExposure&gt;\n\n    &lt;!--\n    Parameter     :  SprayDriftModel\n    Description   :  The spray-drift model to use during spray-drift simulation.\n    Values        :  \"XSprayDrift\" or \"90thRautmann\".\n    --&gt;\n    &lt;SprayDriftModel&gt;XSprayDrift&lt;/SprayDriftModel&gt;\n\n    &lt;!--\n    Parameter     :  DriftReduction\n    Description   :  The effect of drift-reducing nozzles to spay-drift deposition; the fraction filtered out.\n    Values        :  A number between 0 and 1.\n    Remark        :  Zero means no effect = full spray-drift deposition, 1 means full filtering = no deposition at all.\n    --&gt;\n    &lt;DriftReduction&gt;0&lt;/DriftReduction&gt;\n\n    &lt;!--\n    Parameter     :  InCropBuffer\n    Description   :  A in-crop buffer not applied in meters.\n    Values        :  Zero or a positive number.\n    Remark        :  The in-crop buffer is geometrically applied to the field and might result in very small fields not\n                     being applied at all.\n    --&gt;\n    &lt;InCropBuffer&gt;0&lt;/InCropBuffer&gt;\n\n    &lt;!--\n    Parameter     :  InFieldMargin\n    Description   :  The in-field margin for all fields in the landscape over the entire simulation.\n    Values        :  Zero or a positive number.\n    Remark        :  Maybe parameterizable at finer scales in future versions.\n    --&gt;\n    &lt;InFieldMargin&gt;0&lt;/InFieldMargin&gt;\n\n    &lt;!--\n    Parameter     :  VegetationDriftFiltering\n    Description   :  Controls whether simple drift filtering by vegetation is considered in the spray-drift module.\n    Values        :  \"true\" or \"false\"\n    --&gt;\n    &lt;VegetationDriftFiltering&gt;false&lt;/VegetationDriftFiltering&gt;\n\n    &lt;!--\n    Parameter     :  Weather\n    Description   :  Weather is from files in the data directory that are named using the scheme \"weather_XXX.csv\"\n                     where `XXX` are the valid values for the weather parameter.\n    Values        :  Available weather files (see description).\n    Remark        :  Make sure that the weather parameter fits a weather file offered by the scenario.\n    --&gt;\n    &lt;Weather&gt;mars-97100&lt;/Weather&gt;\n\n    &lt;!--\n    Parameter     :  WindDirection\n    Description   :  The direction from where the wind blows in degrees.\n    Values        :  A number between 0 and 359 or -1 for random wind directions.\n    Remark        :  The wind direction is specified for the entire region and simulation but may be parameterizable at\n                     a finer scale in future versions. If set to \"-1\", the wind is randomly selected for each\n                     application individually.\n    --&gt;\n    &lt;WindDirection&gt;-1&lt;/WindDirection&gt;\n\n    &lt;!--\n    Parameter     :  ReportingThreshold\n    Description   :  The lowest number that is reported by the exposure modules.\n    Values        :  Positive numbers.\n    Remark        :  Should be sufficiently small, e.g., ApplicationRate / 1000, ApplicationRate / 2500, ..., or 0.\n    --&gt;\n    &lt;ReportingThreshold&gt;1&lt;/ReportingThreshold&gt;\n\n    &lt;!--\n    Parameter     :  RandomSeed\n    Description   :  An seed with which the random number generator is initialized.\n    Values        :  Any integer number. 0 means no predefined seed.\n    Remark        :  Only set another value than 0 here if you need repeatable simulation runs, e.g., for debugging.\n    --&gt;\n    &lt;RandomSeed&gt;0&lt;/RandomSeed&gt;\n\n    &lt;!--\n    Parameter     :  RunOffTempDir\n    Description   :  The temporary directory for RunOff-Simulations.\n    Values        :  Any short (!) file path, preferably &lt; 20 characters.\n    Remark        :  Make sure that the path exists, otherwise the simulation might fail.\n    --&gt;\n    &lt;RunOffTempDir&gt;C:\\Temp&lt;/RunOffTempDir&gt;\n&lt;/Parameters&gt;\n</code></pre>"},{"location":"getstarted/getstarted.html#viewing-and-analyzing-the-output","title":"Viewing and analyzing the output","text":"<p>Basic model outcome organisation is introduced above, in section Test Run.  </p> <p>xSR is a numerical model that works spatiotemporally explicit. Additional modelling dimensions arise from eg, multiple PPPs, exposure compartments, effect entities and attributes. Thus, the landscape modelling approach is best structured by operating in multiple dimensions (one can imagine as a multidimensional data cube).  </p>"},{"location":"getstarted/getstarted.html#hierarchical-data-format-hdf-hdfview","title":"Hierarchical Data Format (HDF) - HDFView","text":"<p>xLandscape makes use of multidimensional data stores. At present, HDF is being used.  </p> <p>To view the raw output of xSR, open \\run\\xOffFieldSoilRisk-Testrun_1\\mcs\\[mc run ID]\\store\\arr.dat with a HDF5 file viewer such as HDFView. Expand the xSR folder.</p> <p></p> <p>Right click on an item and click \"Open\" to view its attributes and data.  </p> <p>For an expert-level technical exchange, please contact Sascha Bub (sascha.bub@rptu.de).  </p>"},{"location":"getstarted/getstarted.html#analysis","title":"Analysis","text":"<p>Simple, initial analysis capabilities are realised in R and shipped with xSR: RiskAnalysis_MC.R, RiskAnalysis_Experiment.R, located in ..\\xOffFieldSoilRisk\\model\\variant\\RiskAnalysis folder. These analysis are automatically invoked at the end of an xSR simulation.  </p> <p>Own, further analysis can be developed using any data science tools that can access HDF data stores, eg, Python (and using, eg. Jupyter Notebooks for interactive analysis and visualisation).  </p>"},{"location":"reference/fileStructure.html","title":"File Structure (under preparation)","text":"<p>File structure of xSRDemo after cloning:</p> <pre><code>\u251c\u2500\u2500 CropProtection\n\u2502   \u251c\u2500\u2500 PPMCalendars\n|   |   \u251c\u2500\u2500 Apple-spray-guide\n\u2502   \u2502   \u251c\u2500\u2500 Demo-calendars\n\u2502   \u2502   \u251c\u2500\u2500 Rummen\n\u2502   \u2502   \u251c\u2500\u2500 Templates\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 analysis\n\u2502   \u251c\u2500\u2500 ProductTypes.csv\n\u2502   \u251c\u2500\u2500 requirements.txt\n\u2502   \u251c\u2500\u2500 xBF_map_vis.ipynb\n\u2502   \u251c\u2500\u2500 xBF_plot_application_rate.ipynb\n\u2502   \u251c\u2500\u2500 xBF_total_loading.ipynb\n\u2502   \u2514\u2500\u2500 xBF_write_csv.ipynb\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 model\n\u2502   \u251c\u2500\u2500 core\n\u2502   \u251c\u2500\u2500 variant\n\u2502   \u2502   \u251c\u2500\u2500 CropProtection\n\u2502   \u2502   \u251c\u2500\u2500 experiment.xml\n\u2502   \u2502   \u251c\u2500\u2500 mc.xml\n\u2502   \u2502   \u2514\u2500\u2500 package.xsd\n\u251c\u2500\u2500 scenario\n\u2502   \u251c\u2500\u2500 Demo-scenario\n\u2502   \u2502   \u251c\u2500\u2500 Documentation\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 scenario-geo-image.jpg\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 scenario-project.qgz\n\u2502   \u2502   \u251c\u2500\u2500 geo\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 (multiple shp files)\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 package.xinfo\n\u2502   \u2502   \u2514\u2500\u2500 scenario.xproject\n\u2502   \u251c\u2500\u2500 Rummen\n\u2502   \u2502   \u251c\u2500\u2500 Documentation\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 scenario-geo-image.jpg\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 scenario-project.qgz\n\u2502   \u2502   \u251c\u2500\u2500 geo\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 (multiple shp files)\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 package.xinfo\n\u2502   \u2502   \u251c\u2500\u2500 weather\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 weather_mars-97100.csv\n\u2502   \u2502   \u2514\u2500\u2500 scenario.xproject\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .gitmodules\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 __start__.bat\n\u2514\u2500\u2500 template.xrun files\n</code></pre>"},{"location":"reference/parameterisation.html","title":"Parameterisation","text":""},{"location":"reference/parameterisation.html#parameterisation","title":"Parameterisation","text":""},{"location":"reference/parameterisation.html#parameterisation_1","title":"Parameterisation","text":"<p>As any other component, xBF is built to be used (together with other components) in the xLandscape framework in order to build a landscape model. </p> <ol> <li>The Landscape Model must first be set up; see the Landscape Model Core's README for detailed instructions.</li> <li>Create an xSR folder in \\core\\components if it does not already exist.</li> <li>Copy the xSR component from GitHub into the xSR subfolder.</li> <li>The file mc.xml contains information about the components that are used in the created xLandscape model. Make use of the xSR component by adding the following lines:</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;Parameters&gt;\n    &lt;!--\n    Parameter     :  Project\n    Description   :  The scenario used by the simulation.\n    Values        :  should be scenario/*** where *** is a folder name in the scenario sub-folder.\n    Remark        :  Make sure that the scenario is present in the scenario sub-folder.\n    --&gt;\n    &lt;Project&gt;scenario/schematic-100x100&lt;/Project&gt;\n\n    &lt;!--\n    Parameter     :  Modeller\n    Description   :  The name of the modeller.\n    Values        :  Any text.\n    Remark        :  This value is organizational metadata and is not used technically.\n    --&gt;\n    &lt;Modeller&gt;ts&lt;/Modeller&gt;\n\n    &lt;!--\n    Parameter     :  SimID\n    Description   :  Unique identifier of a simulation run.\n    Values        :  Any characters that are valid in file system identifiers.\n    Remark        :  Running a simulation with the same name as an existing simulation run results in an error.\n    Best practice :  Change this parameter with every simulation run. When doing test runs, indicate the test character\n                     of clearly in the identifier. If conducting a run from the experiment table, register it there and\n                     use the naming scheme &lt;experiment id&gt;-&lt;n&gt; where n is the number of the run.\n    --&gt;\n    &lt;SimID&gt;X3Soil-Test&lt;/SimID&gt;\n\n    &lt;!--\n    Parameter     :  NumberMC\n    Description   :  The number of Monte Carlo runs.\n    Values        :  Any positive integer.\n    Remark        :  MC runs are conducted (partly) in parallel according to the NumberParallelProcesses parameter.\n    Best practice :  Always conduct multiple MC runs (except for technical tests), e.g., 3 for long-running simulations,\n                     30 for small simulations and 10 for anything in between.\n    --&gt;\n    &lt;NumberMC&gt;1&lt;/NumberMC&gt;\n\n    &lt;!--\n    Parameter     :  ParallelProcesses\n    Description   :  The number of Monte Carlo runs that are conducted simultaneously.\n    Values        :  Any positive integer.\n    Remark        :  This parameter should be modified according to the available hardware resources.\n    Best practice :  To best use the available hardware, apply this rule of thumb:\n                     min(NumberMC, NumberParallelProcesses) &lt;= available processors.\n    --&gt;\n    &lt;ParallelProcesses&gt;1&lt;/ParallelProcesses&gt;\n\n    &lt;!--\n    Parameter     :  Substance\n    Description   :  Used to name the substance that is applied during all applications.\n    Values        :  Any text.\n    Remark        :  The name itself is mostly a meta-datum but also used to distinguish different substances if\n                     multi-substance experiments are implemented in a future version.\n    --&gt;\n    &lt;Substance&gt;Lindane&lt;/Substance&gt;\n\n    &lt;!--\n    Parameter     :  DT50\n    Description   :  The soil DT50 of the substance in days.\n    Values        :  Positive numbers.\n    --&gt;\n    &lt;DT50&gt;148&lt;/DT50&gt;\n\n    &lt;!--\n    Parameter     :  KocSoil\n    Description   :  The soil KOC of the substance.\n    Values        :  Positive numbers.\n    --&gt;\n    &lt;KocSoil&gt;477&lt;/KocSoil&gt;\n\n    &lt;!--\n    Parameter     :  FreundlichExponent\n    Description   :  The Freundlich exponent of the substance.\n    Values        :  Positive numbers.\n    --&gt;\n    &lt;FreundlichExponent&gt;0.957&lt;/FreundlichExponent&gt;\n\n    &lt;!--\n    Parameter     :  ApplicationRate\n    Description   :  The application rate in g/ha.\n    Values        :  Any positive number (or zero).\n    Remark        :  The application rate applies to all applications within application sequences.\n    --&gt;\n    &lt;ApplicationRate&gt;2400&lt;/ApplicationRate&gt;\n\n    &lt;!--\n    Parameter     :  ApplicationWindow\n    Description   :  The time windows within which applications take place.\n    Values        :  format: MM-DD to MM-DD[, MM-DD to MM-DD[, ...]]\n    Remark        :  For each target field, year and application within an application sequence, a random date within\n                     the specified time window is selected. Example values:\n                     04-15 to 04-15 : All fields are applied on 15th of April every year\n                     04-07 to 04-21 : All fields are applied each year on a random date (per field and year) between 7th\n                                      and 21st of April\n                     04-07 to 04-21, 05-02 to 05-16 : All fields are applied twice each year; on a random date (per\n                                                      field and year) between 7th and 21st of April and on a random date\n                                                      (per field and year) between 2nd and 16th of May.\n    --&gt;\n    &lt;ApplicationWindows&gt;03-01 to 03-01&lt;/ApplicationWindows&gt;\n\n    &lt;!--\n    Parameter     :  SimulateRunOffExposure\n    Description   :  Controls whether run-off exposure is simulated or not.\n    Values        :  \"true\" or \"false.\n    Remark        :  At least one of SimulateRunOffExposure and SimulateSprayDriftExposure should be true.\n    --&gt;\n    &lt;SimulateRunOffExposure&gt;true&lt;/SimulateRunOffExposure&gt;\n\n    &lt;!--\n    Parameter     :  SimulateSprayDriftExposure\n    Description   :  Controls whether spray-drift exposure is simulated or not.\n    Values        :  \"true\" or \"false.\n    Remark        :  At least one of SimulateRunOffExposure and SimulateSprayDriftExposure should be true.\n    --&gt;\n    &lt;SimulateSprayDriftExposure&gt;true&lt;/SimulateSprayDriftExposure&gt;\n\n    &lt;!--\n    Parameter     :  SprayDriftModel\n    Description   :  The spray-drift model to use during spray-drift simulation.\n    Values        :  \"XSprayDrift\" or \"90thRautmann\".\n    --&gt;\n    &lt;SprayDriftModel&gt;XSprayDrift&lt;/SprayDriftModel&gt;\n\n    &lt;!--\n    Parameter     :  DriftReduction\n    Description   :  The effect of drift-reducing nozzles to spay-drift deposition; the fraction filtered out.\n    Values        :  A number between 0 and 1.\n    Remark        :  Zero means no effect = full spray-drift deposition, 1 means full filtering = no deposition at all.\n    --&gt;\n    &lt;DriftReduction&gt;0&lt;/DriftReduction&gt;\n\n    &lt;!--\n    Parameter     :  InCropBuffer\n    Description   :  A in-crop buffer not applied in meters.\n    Values        :  Zero or a positive number.\n    Remark        :  The in-crop buffer is geometrically applied to the field and might result in very small fields not\n                     being applied at all.\n    --&gt;\n    &lt;InCropBuffer&gt;0&lt;/InCropBuffer&gt;\n\n    &lt;!--\n    Parameter     :  InFieldMargin\n    Description   :  The in-field margin for all fields in the landscape over the entire simulation.\n    Values        :  Zero or a positive number.\n    Remark        :  Maybe parameterizable at finer scales in future versions.\n    --&gt;\n    &lt;InFieldMargin&gt;0&lt;/InFieldMargin&gt;\n\n    &lt;!--\n    Parameter     :  VegetationDriftFiltering\n    Description   :  Controls whether simple drift filtering by vegetation is considered in the spray-drift module.\n    Values        :  \"true\" or \"false\"\n    --&gt;\n    &lt;VegetationDriftFiltering&gt;false&lt;/VegetationDriftFiltering&gt;\n\n    &lt;!--\n    Parameter     :  Weather\n    Description   :  Weather is from files in the data directory that are named using the scheme \"weather_XXX.csv\"\n                     where `XXX` are the valid values for the weather parameter.\n    Values        :  Available weather files (see description).\n    Remark        :  Make sure that the weather parameter fits a weather file offered by the scenario.\n    --&gt;\n    &lt;Weather&gt;mars-97100&lt;/Weather&gt;\n\n    &lt;!--\n    Parameter     :  WindDirection\n    Description   :  The direction from where the wind blows in degrees.\n    Values        :  A number between 0 and 359 or -1 for random wind directions.\n    Remark        :  The wind direction is specified for the entire region and simulation but may be parameterizable at\n                     a finer scale in future versions. If set to \"-1\", the wind is randomly selected for each\n                     application individually.\n    --&gt;\n    &lt;WindDirection&gt;-1&lt;/WindDirection&gt;\n\n    &lt;!--\n    Parameter     :  ReportingThreshold\n    Description   :  The lowest number that is reported by the exposure modules.\n    Values        :  Positive numbers.\n    Remark        :  Should be sufficiently small, e.g., ApplicationRate / 1000, ApplicationRate / 2500, ..., or 0.\n    --&gt;\n    &lt;ReportingThreshold&gt;1&lt;/ReportingThreshold&gt;\n\n    &lt;!--\n    Parameter     :  RandomSeed\n    Description   :  An seed with which the random number generator is initialized.\n    Values        :  Any integer number. 0 means no predefined seed.\n    Remark        :  Only set another value than 0 here if you need repeatable simulation runs, e.g., for debugging.\n    --&gt;\n    &lt;RandomSeed&gt;0&lt;/RandomSeed&gt;\n\n    &lt;!--\n    Parameter     :  RunOffTempDir\n    Description   :  The temporary directory for RunOff-Simulations.\n    Values        :  Any short (!) file path, preferably &lt; 20 characters.\n    Remark        :  Make sure that the path exists, otherwise the simulation might fail.\n    --&gt;\n    &lt;RunOffTempDir&gt;C:\\Temp&lt;/RunOffTempDir&gt;\n&lt;/Parameters&gt;\n</code></pre>"},{"location":"reference/troubleshooting.html","title":"Troubleshooting (under preparation)","text":"<p>This page covers common error messages, what they mean, and how to resolve them.</p>"},{"location":"reference/troubleshooting.html#attributeerror","title":"AttributeError","text":"<pre><code>AttributeError: 'ConstantVariable' object has no attribute 'apply_today'\n</code></pre> <p>Explanation:</p> <p>This error occurs when <code>Indication</code> or <code>Indications</code> elements are misconfigured.</p> <p>Possible solutions:</p> <ul> <li>Check any <code>Indication</code> or <code>Indications</code> elements which are choice distributions. All their child elements must have probability attributes associated with them.</li> </ul>"},{"location":"reference/troubleshooting.html#fileexistserror","title":"FileExistsError","text":"<pre><code>FileExistsError: [WinError 183] Cannot create a file when that file already exists:\n'C:\\\\xCropProtection\\\\run\\\\Rummen-xCP-TestingScenario'\n</code></pre> <p>Explanation:</p> <p>A folder with the same name as <code>SimID</code> exists in the ...\\run\\ folder.</p> <p>Possible solutions:</p> <ul> <li>Delete or move the folder to run xCropProtection using that <code>SimID</code>.</li> <li>Change the <code>SimID</code> value to one that does not already exist in the ...\\run\\ folder.</li> </ul>"},{"location":"reference/troubleshooting.html#filenotfounderror","title":"FileNotFoundError","text":"<pre><code>FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\xCropProtection\\\\run\\\\T1EJS3N0CON7NRN3.xml'\n</code></pre> <p>Explanation:</p> <p>No run folder exists in the xCropProtection directory. This usually occurs the first time the repository is cloned from GitHub.</p> <p>Possible solutions:</p> <ul> <li>Create a new folder with the name run in the root directory of xCropProtection. This should be on the same level as the model and scenario folders.</li> </ul>"},{"location":"reference/troubleshooting.html#hdfview-error","title":"HDFview error","text":"<p>In rare cases, opening \"AppliedAreas\" generated from a large amount of input data may cause HDFView to crash due to its data type. Use xCP_write_csv.ipynb to write the data to a csv.</p>"},{"location":"reference/troubleshooting.html#keyerror","title":"KeyError","text":"<pre><code>appl_window = self._applicationWindow.get((day, field), (\"time/day, space/base_geometry\"))\n  File \"C:\\xCropProtection\\model\\core\\components\\xCropProtection\\distributions.py\", line 264, in get\n    return self._value[conv_index]\nKeyError: (730121,)\n</code></pre> <p>Explanation:</p> <p>An <code>ApplicationWindow</code> has a <code>scales</code> value of \"time/day\" or \"time/year\".</p> <p>Possible solutions:</p> <ul> <li>Determine which <code>ApplicationWindow</code> element has a <code>scales</code> value of \"time/day\" or \"time/year\". Set <code>scales</code> to \"global\" (including quotation marks).</li> </ul>"},{"location":"reference/troubleshooting.html#valueerror-chunk-shape","title":"ValueError: chunk shape","text":"<pre><code>ValueError: Chunk shape must not be greater than data shape in any dimension. (1,) is not compatible with (0,)\n</code></pre> <p>Explanation:</p> <p>The number of applied areas calculated by xCropProtection is different than the expected value. Incorrect or overly restrictive constraints on dates, fields, or crop type may result in zero applications being performed during the simulation.</p> <p>Possible solutions:</p> <ul> <li>Check the value of <code>SimulationStart</code> and <code>SimulationEnd</code> in template.xrun. Compare these values to the <code>TemporalValidity</code> defined in all PPMCalendars used in the xCropProtection run. The <code>TemporalValidity</code> should overlap with the simulation start and end values.</li> <li>In all PPMCalendars, check <code>Application</code> elements' <code>ApplicationWindow</code> date ranges. It is possible that application windows are defined for days/months outside the simulation start and end values set in template.xrun.</li> <li>In all PPMCalendars, check the value of <code>TargetCrops</code>. Verify that this is an integer value and that one or more fields in the scenario have this crop type. In \\xCropProtection\\scenario\\[scenario name]\\geo\\package.xinfo, verify that <code>feature_type_attribute</code> refers to the correct field name. In the same file, verify that <code>base_landscape_geometries</code> refers to the correct shapefile.</li> <li>In all PPMCalendars, check the value of <code>TargetFields</code>. Verify that this is an integer value or list of integers and that one or more fields in the scenario have this ID. In \\xCropProtection\\scenario\\[scenario name]\\geo\\package.xinfo, verify that <code>feature_id_attribute</code> refers to the correct field name. In the same file, verify that <code>base_landscape_geometries</code> refers to the correct shapefile.</li> </ul>"},{"location":"reference/troubleshooting.html#valueerror-empty-range","title":"ValueError: empty range","text":"<pre><code>ValueError: empty range for randrange() (359, 6, -353)\n</code></pre> <p>Explanation:</p> <p>The dates of an <code>ApplicationWindow</code> are outside of the allowable range.</p> <p>Possible solutions:</p> <ul> <li>xCropProtection does not support <code>ApplicationWindow</code> ranges that span between multiple years (e.g. December to January).</li> <li>Check the value of all <code>ApplicationWindow</code> elements to be sure that the month that comes first in the year is listed first in the date range. For example, a window of 10-14 to 05-21 would produce this error because xCropProtection interprets this window as October 14th to May 21st, which is invalid.</li> <li>Check that the format of <code>ApplicationWindow</code> date ranges are in the format mm-dd to mm-dd.</li> </ul>"},{"location":"reference/troubleshooting.html#valueerror-probability-sum","title":"ValueError: probability sum","text":"<pre><code>ValueError: Probability sum is not 1.0!\n</code></pre> <p>Explanation:</p> <p>The sum of probability values in one of the choice distributions defined in a PPMCalendar does not equal 1.0.</p> <p>Possible solutions:</p> <ul> <li>Check the probability values in all PPMCalendars to ensure they sum to 1.0.</li> <li>xCropProtection allows a small amount of error when calculating the sum of a choice distribution's probability values. The sum is rounded to 5 decimal places to prevent floating-point arithmetic errors that may occur when adding floating-point values in python. Further explanation can be found on the Python.org website.</li> </ul>"},{"location":"reference/xSR_model_adaptation.html","title":"xSR model adaptation","text":""},{"location":"reference/xSR_model_adaptation.html#xsr-model-adaptation","title":"xSR Model Adaptation","text":"<p>xLandscape framework in order to build a landscape model. </p> <ol> <li>The Landscape Model must first be set up; see the Landscape Model Core's README for detailed instructions.</li> <li>Create an xSR folder in \\core\\components if it does not already exist.</li> <li>Copy the xSR component from GitHub into the xSR subfolder.</li> <li>The file mc.xml contains information about the components that are used in the created xLandscape model. Make use of the xSR component by adding the following lines:</li> </ol>"},{"location":"reference/xoffFieldSoilRisk-glossary.html","title":"Glossary","text":"<p>This section provides a glossary on xOffFieldSoilRisk model and scenario specific topics. A general glossary on xLandscape basics is provided in the xLandscape section. </p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#buffer","title":"Buffer","text":"<p>A distance ([m]) that is kept (has to be kept) to a certain entity during an agricultural activity. Buffers are typically used to implement risk mitigation means, eg, to reduce spray-drift depositions into habitats of non-target-organisms. To protect aquatic organisms no-spray buffers are defined as distance to water bodies (eg, a PPP is allowed to be spray no closer than 10 m distance to streams). To protect terrestric organisms, often in-field or in-crop buffers are defined (eg, spraying has to keep a 5 m distance from the cropped/field boundery).</p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#configuration","title":"Configuration","text":"<p>As for each xLandscape component and landscape model, user simulation inputs and control settings are separated in two different levels, a Configuration and a Parameterisation level: - the configuration of a component (like xCP) allows to change fundamental model behaviour (eg, minimum sprayed area, in-crop buffer calculation). - the Parameterisation level of a component represent the actual user interface, ie, the model parameters exposed to the user. Inputs made by the user in the parameterisation file define a landscape modelling Experiment.  </p> <p>The decision on which model component parameters should be exposed as user interface in the Parameterisation level depends on the purpose of the model and the user group. The assignment of model component parameters to either the configuration or the Parameterisation level can be changed with minimum effort (xLandscape-Parameters).  </p> <p>Both, configuration and Parameterisation refer to direct user inputs (user interaction) and are separated from more extense data inputs like land use data, weather data or pesticide phys-chem properties. Typically, in the user inputs links to such databases to be used in a landscape modelling Experiment are defined wheras the actual data are taken from these databases.  </p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#experiment","title":"Experiment","text":"<p>The term Experiment has been introduced to xLandscape model simulations as an analogue to experimental setups. An Experiment has a single model parameterisation (including xCP parameterisation) and consists of a number of Monte Carlo runs. The latter are independent from each other, ie. in each Monte Carlo Run the defined variabilities (Probability Density Functions, PDFs) are independently sampled. As compared to experimental setups, the 'control' setup is basically assumed to be the no-PPP use, ie non-exposure situation. However, alternative baseline scenarios can be defined as separate Experiments (eg, representing alternative/'organic'/'biological' pest control measures) and their outcome considered in the (comparative) analysis.  </p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#in-off-field-in-off-crop","title":"In-/Off-field, In-/Off-crop","text":"<p>In regulatory risk assessment in Europe, protection goals and risk assessment approaches are different for in-field and off-field areas. Basically, the in-field area is given by the property of the farmer and its bounderies (as you might find on cadastral maps). In cultivated landscapes, off-field areas are typically represented by parts of the field margin (eg, between roads and fields), riparian zones, wood margins. When you see vegetation strips between two arable fields, these are caused due to the working space of the agricultural machinery but  do not represent off-field areas as the two arable properties directly border to each other. In-crop simply represents the currently cropped area. Likewise, off-crop represents all (currently) non-cropped area. In-field off-crop areas are such within the field (property) of a farmer, yet, are currently not cropped. Such areas occur as (in-field) field margins, in some cases just left as a fallow strip, in others of sown flowering strip (to support wildlife and forage for insects). Such in-field margins are also intended to reduce potential run-off of pesticide residues from the field into off-field areas and streams.  </p> <p> </p> <p>Illustration of In-/Off-Field vs. In-/Off-Crop definition. The scheme on the left shows the definition as occurring in official documents. The image on the right shows a typical field situation (Hessian, Germany) Illustration of In-/Off-Field vs. In-/Off-Crop using a schematic scenario. The in-field (left part) is cropped (brown color), yet, has an in-field off-crop margin (light green). The off-field area (right part) is divided into two zones, representing two different land cover types in the expample (wood margin, wood core)</p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#in-crop-buffer","title":"In-crop Buffer","text":"<p>As a Risk Mitigation option, typically to reduce spray-drift depositions into off-field areas, in-crop buffer represent a zone (distance [m]) from the cropped area boundery which must not be sprayed with the PPP of such a label instruction.  </p> <p> Illustration of In-/Off-Field vs. In-/Off-Crop using a schematic scenario. The in-field (left part) is cropped (brown color), yet, has an in-field off-crop margin (light green) as well as an in-crop buffer (solid box). The cropped area within the in-crop buffer is allowed to be sprayed (solid box), whereas the cropped area outside is not. The off-field area (right part) is divided into two zones, representing two different land cover types in the expample (wood margin, wood core)</p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#monte-carlo-run","title":"Monte Carlo Run","text":"<p>Monte Carlo simulations rely on random sampling drawn from probability distributions to obtain numerical results. They can be used to model phenomena with significant variability (and uncertainty) in inputs, such as calculating the possible exposure profile of pesticides in streams in a catchment and the variability of possible effects to aquatic organisms. A nested (2D) Monte Carlo approach allows to also assess consequences of uncertainties to model outcome.  </p> <p>The xLandscape model is a numeric approach that works spatially and temporally explicit. Some phenomenons can be considered deterministic, eg, land use at a certain location and time (as derived from satellite data) or when using historic weather data. However, real-world phenomenons are sometimes not exactly known in space and time, eg, farming activities, catchment conditions or local wind conditions. In such cases, variability distributions can be derived (from data and/or expert judgement), modelled using Monte Carlo, in order to assess the range of possible consequences for the environment and for species. This is done in an xLandscape model by defining an Experiment which consists of a number of Monte Carlo runs to sample the range of possible conditions of the defined real-world landscape system.  </p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#parameterisation","title":"Parameterisation","text":"<p>As for each xLandscape component and landscape model, user simulation inputs and control settings are separated in two different levels, a Configuration and a Parameterisation level: - the Configuration of a component (like xCP) allows to change fundamental model behaviour (eg, minimum sprayed area, in-crop buffer calculation). - the parameterisation level of a component represent the actual user interface, ie, the model parameters exposed to the user. Inputs made by the user in the parameterisation file define a landscape modelling Experiment.  </p> <p>The decision on which model component parameters should be exposed as user interface in the parameterisation level depends on the purpose of the model and the user group. The assignment of model component parameters to either the Configuration or the parameterisation level can be changed with minimum effort (xLandscape-Parameters).  </p> <p>Both, Configuration and parameterisation refer to direct user inputs (user interaction) and are separated from more extense data inputs like land use data, weather data or pesticide phys-chem properties. Typically, in the user inputs links to such databases to be used in a landscape modelling Experiment are defined wheras the actual data are taken from these databases.</p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#risk-mitigation-risk-mitigation-measures","title":"Risk Mitigation / Risk Mitigation Measures","text":"<p>Regarding the use of PPPs and from an operational point of view, here Risk Mitigation basically refers to reducing exposure caused by PPP application. For more information have a look into the outcome of the MAgPie Workshop.</p> <p>In xCP, currently the following Risk Mitigation measures are implemented: - no-spray buffer (typically defined in relation to water bodies) - in-crop buffer (a distance a farmer has to keep from the cropped boundery when spraying) - use of drift-reducing nozzles (sprayer technology to reduce drift)</p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#scenario","title":"Scenario","text":"<p>In the context of risk assessment for pesticides, a Scenario refers to a set of conditions and assumptions used to model and predict the environmental fate and effects of pesticides. At lower tiers of the risk assessment procedure, Scenarios are designed to represent realistic worst-case situations to ensure that the risk assessments are protective of human health and the environment. When getting more realistic, at higher-tier risk assessment levels, Scenarios are intended to represent real-world conditions. Some key elements that define a scenario in this context:</p> <ol> <li>Abiotic Factors: These include non-living environmental factors such as soil type, climate/weather, landscape topology, and water bodies. For example, a scenario might consider how a pesticide behaves in sandy soil under high rainfall conditions. </li> <li>Biotic Factors: These involve living organisms that might be affected by the pesticide, including plants, animals, and microorganisms. The scenario might assess the impact on a specific species or a group of species. </li> <li>Agronomic Practices: This includes farming practices such as land use, crop rotation, land management, irrigation, and pesticide application methods. Different practices can influence how pesticides are distributed and degraded in the environment. </li> <li>Exposure Pathways: Scenarios consider how habitats and species might be exposed to pesticides, such as through forage, water, or contact. </li> <li>Temporal Aspects: The timing of pesticide application, its persistence in the environment and temporal relationship to the occurrence of species are crucial. Scenarios might model short-term (acute) and long-term (chronic) exposures.  </li> </ol> <p>By combining these factors, scenarios build a crucial basis to create a comprehensive picture of the potential risks associated with pesticide use.</p> <p>In xCP, the term PPP use scenario is sometimes used to address a certain Parameterisation of xCP (as part of a landscape model).  Likewise, modellers often talk about a landscape scenario meaning the certain geographic region for which eg, land use/cover, soil, weather and habitat conditions have been defined as basis for landscape-scale pesticide exposure and effect modelling. </p>"},{"location":"reference/xoffFieldSoilRisk-glossary.html#simulation","title":"Simulation","text":"<p>The term Simulation is not precisely defined and is used somehow colloquial with different meanings. This is not a problem as the actual meaning typically gets clear in its use context: - a model simulation can just mean to parameterise and run a model in general - an xLandscape model simulation can mean to conduct an Experiment, ie, here the terms are used synonymously - a Simulation can also address an individual Monte Carlo run of an xLandscape model Experiment. </p>"},{"location":"scenarios/create-scenario.html","title":"Create Scenarios (under preparation)","text":"<p>In the context of risk assessment for pesticides, a Scenario refers to a set of conditions and assumptions used to model and predict the environmental fate and effects of pesticides (Glossary/Scenarios). A Scenario is typically composed of </p> <ol> <li>environmental conditions (abiotic, biotic, land cover, etc.)</li> <li>agricultural practise, esp. land use and land management,  including the use of PPPs, as refered to as PPP use scenario</li> </ol> <p>In xCP, the term PPP use scenario is simultaneously addressed as Parameterisation of xCP (as part of a full parameterisation of a landscape model). The environmental conditions together with the land use are often called a landscape scenario.  In an xCP parameterisation, PPP use are typically defined related to land use types (eg, the use of a fungicide in apples). During runtime xCP evaluates actual land use, ie. land use data can be static or dynamic. </p> <p>Note: This section provides an introduction to xCP scenarios on a technical level with the intention to enable colleagues with technical experiance to build scenarios and to use xCP. However, we plan to develop a graphical user interface (GUI) that allows any user to intuitively build xCP scenarios.  </p> <p>LULC, off-field soil definition we propose to understand xSR scenarios as a composition of off-field soil habitats, typically combining ready-to-use LULC data with knowledge  </p> <p></p> <p>Illustration of potential off-field soil areas in cultural landscapes in central Europe.  </p>"},{"location":"scenarios/create-scenario.html#use-example-scenarios-as-templates","title":"Use Example Scenarios as Templates","text":"<p>The xCropProtectionDemo model is packaged with example scenarios located in the scenario folder. Example scenarios are of static land use types.  </p> <ul> <li> <p>A scenario in Rummen, Belgium (Rummen-full)</p> </li> <li> <p>A subset of the Rummen-full scenario in Rummen, Belgium (Rummen-xCP-TestingScenario)</p> </li> </ul>"},{"location":"scenarios/create-scenario.html#custom-scenarios","title":"Custom Scenarios","text":"<p>To create a new scenario for use with xCropProtection, users should follow these steps.</p> <ol> <li>In folder scenario\\, create a new folder with the scenario name. In this example, the scenario will be called \"test-scenario\".</li> <li> <p>In folder scenario\\test-scenario\\, create a folder named \"geo\". Copy a scenario.xproject file from a different scenario or create a new file and copy the following xml text: <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;Project \nxmlns=\"urn:xLandscapeModelScenarioInfo\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"urn:xLandscapeModelScenarioInfo ../../model/core/base/scenario.xsd\"&gt;\n    &lt;Name&gt;SCENARIO NAME&lt;/Name&gt;\n    &lt;Version&gt;1.0&lt;/Version&gt;\n    &lt;SupportedRuntimeVersions&gt;\n        &lt;Version variant=\"xCropProtectionDemo\" number=\"0.1\"/&gt;\n    &lt;/SupportedRuntimeVersions&gt;\n    &lt;Description&gt;DESCRIPTION&lt;/Description&gt;\n    &lt;TemporalExtent&gt;\n        &lt;FromDate&gt;2000-01-01&lt;/FromDate&gt;\n        &lt;ToDate&gt;2019-12-31&lt;/ToDate&gt;\n    &lt;/TemporalExtent&gt;\n    &lt;Changelog&gt;\n        &lt;Version number=\"1.0\" date=\"2000-01-01\"&gt;\n            &lt;Change author=\"your initials\"&gt;Scenario created.&lt;/Change&gt;\n        &lt;/Version&gt;\n    &lt;/Changelog&gt;\n    &lt;Content&gt;\n        &lt;Item name=\"LandscapeScenario\" target=\"geo/package.xinfo\" version=\"1\" /&gt;\n    &lt;/Content&gt;\n    &lt;Contacts&gt;\n        &lt;Contact&gt;Thorsten Schad - thorsten.schad@bayer.com&lt;/Contact&gt;\n    &lt;/Contacts&gt;\n&lt;/Project&gt;\n</code></pre> Add correct values for all elements in scenario.xproject. Preferably, use an XML capable editor (eg, VSCode, PyCharm xxx) and build the scenario.xproject using such a template or from scratch. Note: It is important to link the XML to its schema: <pre><code>xmlns=\"urn:xLandscapeModelScenarioInfo\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"urn:xLandscapeModelScenarioInfo ../../model/core/base/scenario.xsd\"\n</code></pre></p> </li> <li> <p>In the geo folder:</p> <ol> <li>Place the shapefiles of the spatial data to be used in the scenario.</li> <li>Create package.xinfo. Copy from another scenario or use the following text: <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;landscape_package \n    xmlns=\"urn:xCropProtectionLandscapeScenarioGeoPackage\" \n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n    xsi:schemaLocation=\"urn:xCropProtectionLandscapeScenarioGeoPackage ../../../model/variant/package.xsd\"\n&gt;\n&lt;meta&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;target_type&gt;222&lt;/target_type&gt;\n    &lt;habitat_types&gt;0&lt;/habitat_types&gt;\n&lt;/meta&gt;\n&lt;base&gt;\n    &lt;base_landscape_geometries&gt;LULC.shp&lt;/base_landscape_geometries&gt;\n    &lt;feature_id_attribute&gt;ALVID&lt;/feature_id_attribute&gt;\n    &lt;feature_type_attribute&gt;LULCTypeId&lt;/feature_type_attribute&gt;\n    &lt;additional_attributes/&gt;\n&lt;/base&gt;\n&lt;supplementary&gt;\n&lt;/supplementary&gt;\n&lt;supplementary_shapefiles/&gt;\n&lt;/landscape_package&gt;\n</code></pre> <code>base_landscape_geometries</code> defines the name of the shapefile contained in the geo folder. <code>feature_id_attribute</code> defines the column of the shape file which is used to distinguish individual fields/features. It is not recommended to use OBJECTID for this xxx. <code>feature_type_attribute</code> defines the column of the shape file to specifies a field/feature's LULC type. The TargetCrops value in PPMCalendar.xml refers to the field defined in <code>feature_type_attribute</code>. </li> </ol> </li> <li>In CropProtection\\, create a file named xCropProtection-test-scenario.xml. It can be left blank for the moment.  </li> <li>In CropProtection\\PPMCalendars\\, create a folder with the same name as the new scenario. In that folder, place all PPMCalendar.xml files that should be included with the new scenario. Note that not every file in this folder will be used during a run of xCropProtection, files must first be added to xCropProtection-test-scenario.xml. Examples of PPMCalendar.xml files can be found in Templates.  </li> <li>Modify CropProtection\\xCropProtection-test-scenario.xml to include PPMCalendars. Sample: <pre><code>&lt;xCropProtection xmlns=\"urn:xCropProtectionLandscapeScenarioParametrization\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"urn:xCropProtectionLandscapeScenarioParametrization ../model/core/components/xCropProtection/xCropProtection.xsd\"&gt;\n    &lt;PPMCalendars&gt;\n        &lt;PPMCalendar include=\"PPMCalendars/test-scenario/PPMCalendar-1.xml\"/&gt;\n        &lt;PPMCalendar include=\"PPMCalendars/test-scenario/PPMCalendar-2.xml\"/&gt;\n    &lt;/PPMCalendars&gt;\n    &lt;Technologies include=\"Technologies.xml\"/&gt;\n&lt;/xCropProtection&gt;\n</code></pre> Technologies.xml will exist after cloning xCropProtection. However, if a PPMCalendar contains a Technology not already included in Technologies.xml, it must be added to the file in a manner consistent with the elements already present.  </li> <li> <p>Make a copy of template.xrun (the .xrun file represents the actual landscape model parameterisation); rename the copy with a unique name. Change elements in the file so that xCropProtection uses the new scenario files. Be sure to change:</p> <ul> <li>LandscapeScenario: scenario/test-scenario</li> <li>CropProtectionScenario: test-scenario</li> <li>SimID: a string that does not already exist in the run folder</li> <li>SimulationStart and SimulationEnd: set the first and last date to be simulated</li> </ul> </li> </ol> <p>After these steps are completed, the new scenario files should have the following structure:</p> <pre><code>\u251c\u2500\u2500 CropProtection\n\u2502   \u251c\u2500\u2500 PPMCalendars\n\u2502   \u2502   \u251c\u2500\u2500 test-scenario\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 PPMCalendar-2.xml\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 PPMCalendar-1.xml\n\u2502   \u251c\u2500\u2500 Technologies.xml\n\u2502   \u2514\u2500\u2500 xCropProtection-test-scenario.xml\n\u251c\u2500\u2500 scenario\n\u2502   \u251c\u2500\u2500 test-scenario\n\u2502   \u2502   \u251c\u2500\u2500 geo\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 (multiple shp files)\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 package.xinfo\n\u2502   \u2502   \u2514\u2500\u2500 scenario.xproject\n\u2514\u2500\u2500 template-test-scenario.xrun\n</code></pre> <p>Drag template-test-scenario.xrun onto __start__.bat to run xCropProtection using the new scenario.</p>"},{"location":"scenarios/create-scenario.html#tiered-approach","title":"Tiered Approach","text":"<p>xxx Depending on the purpose of the xSR modelling,  </p> <ol> <li>off-the-shelf data: covering large geographic regions</li> <li>best-available data, including manual processing</li> <li>contemporary data generation: high-resolution drone mapping</li> <li>field study: best possible landscape mapping, xxx quantification and modelling</li> </ol>"},{"location":"scenarios/intro-scenarios.html","title":"Scenarios (under preparation)","text":""},{"location":"scenarios/intro-scenarios.html#introduction","title":"Introduction","text":"<p>The local co-occurrence of arable fields and off-field areas (eg, field margins, hedges, riparian zones, wood margins, graslands), their slopes, structure and management, together with environmental conditions, are key drivers of potential pesticide exposure and risk of off-field-soil organisms. A technical representation of certain geographic area (or artificial composition) covering these driving factors is what we call a scenario. In regulatory RA, scenarios are selected and designed to represent a certain protection level for the entirety of situations in a given regulatory unit (eg, a country). Conservative scenario conditions for the risk of non-target-organismsm are protective for a large fraction of populations (typically &gt;90%) and are basically used at lower-tier RA levels. Using a realistic landscape-level scenarios allows to obtain insights on real-world risk drivers and to define adpated risk mitigation and management measures. This is further improved when using a variety of more realistic landscape-level scenarios.  </p>"},{"location":"scenarios/intro-scenarios.html#off-field-soil-areas","title":"Off-Field Soil Areas","text":"<p>Formally, off-field areas starts at the property boundery of the field (see scheme in Background). However, the idea of protection goals is xxx . Thus, in real-world . Often arable fields directly border to each other. So there is </p> <p>scenarios are constructed </p> <p></p> <p>Illustration of potential off-field soil areas in cultural landscapes in central Europe.  </p> Land use/cover Notes Field margin xxx"},{"location":"scenarios/intro-scenarios.html#example-scenarios","title":"Example Scenarios","text":""},{"location":"scenarios/intro-scenarios.html#publication-open-access","title":"Publication (Open Access)","text":"<p>Example scenarios introduced in the publication to the xSR model in IEAM: A spatiotemporally explicit modeling approach for more realistic exposure and risk assessment of off-field soil organisms are also open access and available at Github:  </p> <ul> <li>xxx</li> <li>xxx NRW1</li> </ul>"},{"location":"scenarios/intro-scenarios.html#schematic-scenarios","title":"Schematic Scenarios","text":"<p>different purposes  </p> <ul> <li>represent a single edge-of-field situation</li> <li>learning</li> <li></li> </ul> <p> </p> <p>Schematic scenario 1 - 'Grassland' type.</p> <p> </p> <p>Schematic scenario 2 - 'Riparian' type.</p> <p> </p> <p>Schematic scenario 3 - 'Grassstrip' type.</p> <ol> <li>'Grassland'-type large off-field area; yet, also margins of large areas mostly direct vicinity to arable fields single field as exposure source representing, eg, grassland, wood, urban; wood-margin, urban-margin  </li> <li>'Riparian'-type bordering to 2 fields representing, eg, ditch/stream riparian zone, off-field hedge</li> <li>'Grassstrip'-type small grassstrip between (rural) road and fields  (anthropogenic) partly hedges</li> </ol> <p>further types from across Europe?!</p> <p>Ensemble of schematic scenarios representing a statistical population of off-field-soil areas.  </p>"},{"location":"scenarios/intro-scenarios.html#landscape-scenarios","title":"Landscape Scenarios","text":"<p>Example landscape scenarios were choosen for </p>"},{"location":"scenarios/intro-scenarios.html#nrw1","title":"NRW1","text":""},{"location":"scenarios/intro-scenarios.html#nrw2","title":"NRW2","text":""},{"location":"scenarios/intro-scenarios.html#nrw3","title":"NRW3","text":""},{"location":"xLandscape/index.html","title":"xLandscape-Documentation","text":"<p>Documentation of general xLandscape topics.</p>"},{"location":"xLandscape/xLandscape-buildingModels.html","title":"Landscape Model Composition","text":""},{"location":"xLandscape/xLandscape-buildingModels.html#implementation","title":"Implementation","text":"<p>Landscape Model composition using XML (Sascha Bub, RPTU, presentation at SETAC 2023)</p>"},{"location":"xLandscape/xLandscape-components.html","title":"Components","text":""},{"location":"xLandscape/xLandscape-components.html#examples","title":"Examples","text":""},{"location":"xLandscape/xLandscape-components.html#xdrift","title":"xDrift","text":"<p>Example module  xDrift- Bub, Schad, Gao 2020</p>"},{"location":"xLandscape/xLandscape-components.html#xcropprotection","title":"xCropProtection","text":""},{"location":"xLandscape/xLandscape-components.html#implementation","title":"Implementation","text":""},{"location":"xLandscape/xLandscape-glossary.html","title":"Glossary","text":"<p>Basically, all xCP entities are defined close to the real-world objects they represent (overview graphic on xCP Entities in Indication). </p>"},{"location":"xLandscape/xLandscape-glossary.html#active-substance","title":"Active Substance","text":"<p>An active substance (a.s.) in a plant protection product is any chemical, plant extract, pheromone, or micro-organism (including viruses) that acts against pests or affects plants, parts of plants, or plant products (https://food.ec.europa.eu/plants/pesticides_en). Essentially, it's the component that provides the intended protective or pesticidal effect. Active Substances have physical and chemical properties as well as ecotoxicological endpoints. These data are kept in corresponding databases. </p>"},{"location":"xLandscape/xLandscape-glossary.html#application","title":"Application","text":"<p>When a PPP is/PPPs are applied to a certain crop at a certain field we call this an Application. Typically, a farmer puts a PPP (or a set of PPPs) into a spraying tank, fills the tank up with water, drives to the field and sprays the solution onto the field (into the crop). In xCP context, the term Application is used close to agricultural practice, yet, is related to its use in pesticide risk assessment, especially the exposure modelling part.  An Application is defined by  - the PPP (or PPPs) to be applied  - an Application Rate (eg, in [\u00b5g a.s./ha] or [mL PPP/ha])  - a time when the application is intended (eg, deterministic day or a time window with a related distribution function)  - the technology with which the application will be done (eg, boom sprayer)  - risk mitigation measures (eg, spray buffer, in-crop buffer, drift-reducing nozzles) </p> <p> PPP spray application using a boom sprayer </p> <p>Remark: Influenced by classic exposure modelling, at the current development status, the definition of an Application includes the definition of an application timing, although in agricultural practice typically the use of a PPP is related to crop development stages. Thus, currently, the modeller has to determine the dependence of regional crop development with time. Future xCP versions are planned to allow defining an Application related to crop development stage (which can be provided by databases or crop development modelling).   </p>"},{"location":"xLandscape/xLandscape-glossary.html#application-rate","title":"Application Rate","text":"<p>In agricultural practice, the amount of PPPs applied to a field is usually determined as amount PPP by field area.  The farmer typically determines the volume PPP [mL] by field area [ha] (eg, considering the crop development status, 'the higher the crop the more PPP needed').  As risk assessment often focuses on active substance (a.s.), so does modelling. Therefore, in xCP the Application Rate can be defined as amount a.s. or PPP per field ares (eg, [\u00b5g a.s./ha], [mL PPP/ha]).</p>"},{"location":"xLandscape/xLandscape-glossary.html#application-sequence","title":"Application Sequence","text":"<p>A sequence of individual PPP Applications. Each individual Application within an Application Sequence can be defined independently. Thus, an Application Sequence can represent, eg, the multiple use of the same PPP (PPPs) using the same technology and risk mitigation, yet, at individual application rates (eg, as often the case for fungicide uses in orchards). However, an Application Sequence can also represent uses of different PPPs in a sequence (as illustrated in the graphic below).   </p> <p> Illustration of a PPP application sequence using different PPPs (https://rwz.ag/fileadmin2023/Agrarhandel/Weinbau/Mosel/240124_bild_weinbauempfehlung-pflanzenschutz-mosel.png)</p>"},{"location":"xLandscape/xLandscape-glossary.html#application-window","title":"Application Window","text":"<p>The time when an application is planned to be conducted. In a modelling experiment using xCP, an Application Window can be a deterministic day or a time span (eg, 1.-14. April). In the latter case, a probability distribution function is assigned to an application window from which actual application dates are sampled during model runtime. </p> <p>Remark: Influenced by classic exposure modelling, at the current development status, the definition of an Application includes the definition of an application timing (Application Window), although in agricultural practice typically the use of a PPP is related to crop development stages. Thus, currently, the modeller has to determine the dependence of regional crop development with time. Future xCP versions are planned to allow defining an Application related to crop development stage (which can bw provided by databases or crop development modelling). Also, typically farmers' decisions depend on agricultural and environmental conditions. xCP is planned to allow the definition of such dependency rules, eg, not to conduct a certain spray application when a rainstorm is predicted by weather forecast.  </p>"},{"location":"xLandscape/xLandscape-glossary.html#buffer","title":"Buffer","text":"<p>A distance ([m]) that is kept (has to be kept) to a certain entity during an agricultural activity. Buffers are typically used to implement risk mitigation means, eg, to reduce spray-drift depositions into habitats of non-target-organisms. To protect aquatic organisms no-spray buffers are defined as distance to water bodies (eg, a PPP is allowed to be spray no closer than 10 m distance to streams). To protect terrestric organisms, often in-field or in-crop buffers are defined (eg, spraying has to keep a 5 m distance from the cropped/field boundery).</p>"},{"location":"xLandscape/xLandscape-glossary.html#configuration","title":"Configuration","text":"<p>As for each xLandscape component and landscape model, user simulation inputs and control settings are separated in two different levels, a Configuration and a Parameterisation level: - the configuration of a component (like xCP) allows to change fundamental model behaviour (eg, minimum sprayed area, in-crop buffer calculation). - the Parameterisation level of a component represent the actual user interface, ie, the model parameters exposed to the user. Inputs made by the user in the parameterisation file define a landscape modelling Experiment.  </p> <p>The decision on which model component parameters should be exposed as user interface in the Parameterisation level depends on the purpose of the model and the user group. The assignment of model component parameters to either the configuration or the Parameterisation level can be changed with minimum effort (xLandscape-Parameters).  </p> <p>Both, configuration and Parameterisation refer to direct user inputs (user interaction) and are separated from more extense data inputs like land use data, weather data or pesticide phys-chem properties. Typically, in the user inputs links to such databases to be used in a landscape modelling Experiment are defined wheras the actual data are taken from these databases.  </p>"},{"location":"xLandscape/xLandscape-glossary.html#crop-protection-calender","title":"Crop Protection Calender","text":"<p>The Crop Protection Calender (CPC) is a key parameterisation element of xCP. It is the entry point of each xCP PPP use scenario. In agricultural practice, pest control measures for a crop are typically planned based on experiance, PPP availability and other factors. Such planning can happen quite early in a season or closer to actual pest control. Crop protection plans are made eg, by official plant protection advisory services, farmers, or PPP producers. The term Calender is used to emphasise its temporal (crop development stage) aspects and similarity to everyday calenders we are used to.  adaptation). Besides reflecting ag practice, the approach of using a CPC also addresses modelling practice in risk assessment which typically focus on a certain indication, conducted over long time periods.  Beyond these established uses, alternative CPCs can be used to assess the environmental impact of alternative pest control options, or to design new pest control means against established ones, considered as baselines.  </p> <p>Summary on CPC characteristics: a CPC - is specific to a crop (or group of crops) - has a temporal validity, ie it can be constant over the entire model simulation period or can change at any (defined) time step - can be adaptive, ie can change during model runtime (eg, reacting on pest pressure)  </p> <p></p> <p> Visualisation of plant protection recommendations in apple for the forthcomming season (colors represent insecticides, fungicides, growth regulators and herbicides)</p> <p> Example plant protection recommendations in vines (Bayer AG)</p>"},{"location":"xLandscape/xLandscape-glossary.html#experiment","title":"Experiment","text":"<p>The term Experiment has been introduced to xLandscape model simulations as an analogue to experimental setups. An Experiment has a single model parameterisation (including xCP parameterisation) and consists of a number of Monte Carlo runs. The latter are independent from each other, ie. in each Monte Carlo Run the defined variabilities (Probability Density Functions, PDFs) are independently sampled. As compared to experimental setups, the 'control' setup is basically assumed to be the no-PPP use, ie non-exposure situation. However, alternative baseline scenarios can be defined as separate Experiments (eg, representing alternative/'organic'/'biological' pest control measures) and their outcome considered in the (comparative) analysis.  </p>"},{"location":"xLandscape/xLandscape-glossary.html#in-off-field-in-off-crop","title":"In-/Off-field, In-/Off-crop","text":"<p>In regulatory risk assessment in Europe, protection goals and risk assessment approaches are different for in-field and off-field areas. Basically, the in-field area is given by the property of the farmer and its bounderies (as you might find on cadastral maps). In cultivated landscapes, off-field areas are typically represented by parts of the field margin (eg, between roads and fields), riparian zones, wood margins. When you see vegetation strips between two arable fields, these are caused due to the working space of the agricultural machinery but  do not represent off-field areas as the two arable properties directly border to each other. In-crop simply represents the currently cropped area. Likewise, off-crop represents all (currently) non-cropped area. In-field off-crop areas are such within the field (property) of a farmer, yet, are currently not cropped. Such areas occur as (in-field) field margins, in some cases just left as a fallow strip, in others of sown flowering strip (to support wildlife and forage for insects). Such in-field margins are also intended to reduce potential run-off of pesticide residues from the field into off-field areas and streams.  </p> <p> </p> <p>Illustration of In-/Off-Field vs. In-/Off-Crop definition. The scheme on the left shows the definition as occurring in official documents. The image on the right shows a typical field situation (Hessian, Germany) Illustration of In-/Off-Field vs. In-/Off-Crop using a schematic scenario. The in-field (left part) is cropped (brown color), yet, has an in-field off-crop margin (light green). The off-field area (right part) is divided into two zones, representing two different land cover types in the expample (wood margin, wood core)</p>"},{"location":"xLandscape/xLandscape-glossary.html#in-crop-buffer","title":"In-crop Buffer","text":"<p>As a Risk Mitigation option, typically to reduce spray-drift depositions into off-field areas, in-crop buffer represent a zone (distance [m]) from the cropped area boundery which must not be sprayed with the PPP of such a label instruction. Illustration of In-/Off-Field vs. In-/Off-Crop using a schematic scenario. The in-field (left part) is cropped (brown color), yet, has an in-field off-crop margin (light green) as well as an in-crop buffer (solid box). The cropped area within the in-crop buffer is allowed to be sprayed (solid box), whereas the cropped area outside is not. The off-field area (right part) is divided into two zones, representing two different land cover types in the expample (wood margin, wood core)</p>"},{"location":"xLandscape/xLandscape-glossary.html#indication","title":"Indication","text":"<p>Generally, measures to protect plants (crop) from a certain pest. In xCP, an Indication is an explicit part of its parameterisation. An Indication is made of PPP Application Sequences, at minimum one PPP Application Sequence. If more than one Application Sequence is defined in an Indication, these sequences are considered alternative Application sequences ('OR' related). Thus, the xCP parameterisation entity Indication can be used to define alternative PPP use pattern, eg, reflecting product market shares or fractions 'biological' or 'organic' pest control means. Multiple Indications can be defined in an xCP parameterisation, as many as necessary to represent a simple or complex real-world PPP use pattern in one or many crops. Each individual Indication defined will be conducted in an xCP simulation. </p> <p> xCP entities and their relationship</p>"},{"location":"xLandscape/xLandscape-glossary.html#monte-carlo-run","title":"Monte Carlo Run","text":"<p>Monte Carlo simulations rely on random sampling drawn from probability distributions to obtain numerical results. They can be used to model phenomena with significant variability (and uncertainty) in inputs, such as calculating the possible exposure profile of pesticides in streams in a catchment and the variability of possible effects to aquatic organisms. A nested (2D) Monte Carlo approach allows to also assess consequences of uncertainties to model outcome.  </p> <p>The xLandscape model is a numeric approach that works spatially and temporally explicit. Some phenomenons can be considered deterministic, eg, land use at a certain location and time (as derived from satellite data) or when using historic weather data. However, real-world phenomenons are sometimes not exactly known in space and time, eg, farming activities, catchment conditions or local wind conditions. In such cases, variability distributions can be derived (from data and/or expert judgement), modelled using Monte Carlo, in order to assess the range of possible consequences for the environment and for species. This is done in an xLandscape model by defining an Experiment which consists of a number of Monte Carlo runs to sample the range of possible conditions of the defined real-world landscape system.  </p>"},{"location":"xLandscape/xLandscape-glossary.html#parameterisation","title":"Parameterisation","text":"<p>As for each xLandscape component and landscape model, user simulation inputs and control settings are separated in two different levels, a Configuration and a Parameterisation level: - the Configuration of a component (like xCP) allows to change fundamental model behaviour (eg, minimum sprayed area, in-crop buffer calculation). - the parameterisation level of a component represent the actual user interface, ie, the model parameters exposed to the user. Inputs made by the user in the parameterisation file define a landscape modelling Experiment.  </p> <p>The decision on which model component parameters should be exposed as user interface in the parameterisation level depends on the purpose of the model and the user group. The assignment of model component parameters to either the Configuration or the parameterisation level can be changed with minimum effort (xLandscape-Parameters).  </p> <p>Both, Configuration and parameterisation refer to direct user inputs (user interaction) and are separated from more extense data inputs like land use data, weather data or pesticide phys-chem properties. Typically, in the user inputs links to such databases to be used in a landscape modelling Experiment are defined wheras the actual data are taken from these databases.</p>"},{"location":"xLandscape/xLandscape-glossary.html#plant-protection-measure-ppm","title":"Plant Protection Measure (PPM)","text":"<p>An action to prevent or control pests, eg, protecting apples against powdery mildew fungy or protecting olives against the white fly. In xCP, a Plant Protection Measure is represented by one or more Indications.  </p>"},{"location":"xLandscape/xLandscape-glossary.html#plant-protection-product-ppp","title":"Plant Protection Product (PPP)","text":"<p>Plant protection products (PPPs) are chemical or biological products which are used to protect plants or plant products from harm caused by animals (eg, insects and rodents) or diseases such as fungal infestation. Products which are used to eliminate unwanted field weeds are also considered PPPs. The term \u201cpesticides\u201d is often used instead of plant protection product. PPPs contain one or more Active Substances and other co-formulants (substances which are supposed to have a positive effect on the production, storage or use of a product). The product itself is used in various forms, for example as spraying agents for seed treatment or in granular form.  </p>"},{"location":"xLandscape/xLandscape-glossary.html#risk-mitigation-risk-mitigation-measures","title":"Risk Mitigation / Risk Mitigation Measures","text":"<p>Regarding the use of PPPs and from an operational point of view, here Risk Mitigation basically refers to reducing exposure caused by PPP application. For more information have a look into the outcome of the MAgPie Workshop.</p> <p>In xCP, currently the following Risk Mitigation measures are implemented: - no-spray buffer (typically defined in relation to water bodies) - in-crop buffer (a distance a farmer has to keep from the cropped boundery when spraying) - use of drift-reducing nozzles (sprayer technology to reduce drift)</p>"},{"location":"xLandscape/xLandscape-glossary.html#scenario","title":"Scenario","text":"<p>In the context of risk assessment for pesticides, a Scenario refers to a set of conditions and assumptions used to model and predict the environmental fate and effects of pesticides. At lower tiers of the risk assessment procedure, Scenarios are designed to represent realistic worst-case situations to ensure that the risk assessments are protective of human health and the environment. When getting more realistic, at higher-tier risk assessment levels, Scenarios are intended to represent real-world conditions. Some key elements that define a scenario in this context:</p> <ol> <li>Abiotic Factors: These include non-living environmental factors such as soil type, climate/weather, landscape topology, and water bodies. For example, a scenario might consider how a pesticide behaves in sandy soil under high rainfall conditions. </li> <li>Biotic Factors: These involve living organisms that might be affected by the pesticide, including plants, animals, and microorganisms. The scenario might assess the impact on a specific species or a group of species. </li> <li>Agronomic Practices: This includes farming practices such as land use, crop rotation, land management, irrigation, and pesticide application methods. Different practices can influence how pesticides are distributed and degraded in the environment. </li> <li>Exposure Pathways: Scenarios consider how habitats and species might be exposed to pesticides, such as through forage, water, or contact. </li> <li>Temporal Aspects: The timing of pesticide application, its persistence in the environment and temporal relationship to the occurrence of species are crucial. Scenarios might model short-term (acute) and long-term (chronic) exposures.  </li> </ol> <p>By combining these factors, scenarios build a crucial basis to create a comprehensive picture of the potential risks associated with pesticide use.</p> <p>In xCP, the term PPP use scenario is sometimes used to address a certain Parameterisation of xCP (as part of a landscape model).  Likewise, modellers often talk about a landscape scenario meaning the certain geographic region for which eg, land use/cover, soil, weather and habitat conditions have been defined as basis for landscape-scale pesticide exposure and effect modelling. </p>"},{"location":"xLandscape/xLandscape-glossary.html#simulation","title":"Simulation","text":"<p>The term Simulation is not precisely defined and is used somehow colloquial with different meanings. This is not a problem as the actual meaning typically gets clear in its use context: - a model simulation can just mean to parameterise and run a model in general - an xLandscape model simulation can mean to conduct an Experiment, ie, here the terms are used synonymously - a Simulation can also address an individual Monte Carlo run of an xLandscape model Experiment. </p>"},{"location":"xLandscape/xLandscape-intro.html","title":"xLandscape","text":"<p>xLandscape is not a model. It's a modular framework that allows to build models. The models to build are typically intended to simulate processes (phenomenons) in real-world landscapes. Therefore, the core of the xLandscape approach implements characteristics of spatiotemporally eXplicit modelling using geoinformation. Beyond space and time, further dimensions and scales are explicitly represented. The prefix x shall indicate this. This design intends to simulate pattern of real-world landscape conditions using a Monte Carlo approach. Another fundamental principle is that xLandscape has a modular design. Modules are called components as the software architecture is based on Component-Based Software Enginieering (CBSE). The graphic below shows the composition of a catchment-scale model xAquatic (Github: xAquatic).  </p> <p>The current major release level is 1.x, which essentially means that we have a working software available that implements the key design and  essential requirements. The Vision below explains where we want to go to. xLandscape is open source (Github: xLandscape, see the xLandscape README for technical details and instructions).  </p> <p> </p> <p>Illustration of a model composition using the xLandscape framework. The core is represented by the framing 'L' (dark blue). The boxes represent components (eg, 'xDrift') of specific functionality. The composition make a model, here xAquatic which simulates pesticide use in catchments, exposure of streams, pesticide transport and fate in streams, as well as effects to aquatic invertebrate species. The integration assures inner consistancy of data and semantics (indicated by the light blue backgroud).  </p> <p>For futher information you might contact Thorsten Schad (mailto:thorsten.schad@bayer.com) or Sascha Bub (mailto:sascha.bub@rptu.de).  </p>"},{"location":"xLandscape/xLandscape-intro.html#vision","title":"Vision","text":""},{"location":"xLandscape/xLandscape-intro.html#in-what-situation-did-we-start","title":"in what situation did we start?!","text":"<p>In the 2000s, pesticide risk assessment was largely based on a combination of conservative (worst-case) exposure scenarios and ecotoxicological testing conditions. Although this risk assessment design assures a high level of protectiveness, it does not allow to define effective and efficient risk management measures, nor does it provide approaches in cases where unacceptable risk was indicated for worst-case conditions. The need for more realistic risk assessment was also identified in different pesticide risk assessment related workgroups (eg, European Workshop on Probabilistic Risk Assessment for the Environmental Impacts of PPPs (EUPRA, Hart 2001), FOCUS Landscape and Mitigation (FOCUS 2007a, 2007b)), as well as in more generic initiatives (eg, Water Framework Directive (WFD, EC 2000), Sustainable Use Directive (EC 2009b), United Nations 'Millennium Ecosystem Assessment' (2005)). In a phase of improved availability of environmental (geo)data together with the establishment of mechanistic models (eg, EC/Joined Research Centre), early approaches were built for more realistic exposure and risk assessment at landscape-level (eg, Almass, IVA/GeoPERA, Julius-K\u00fchn-Institut/GIS, UBA/GeoRISK). Although significant progress was made, these early approaches had particular deficiencies in how naturally given variability was propagated to outcome (resulting in unrealstic system conditions) and tended to be rather large and intransparent monoliths. The models were not publically available and interoperability was not possible. A stepping stone towards addressing these shortcomings and so, recent developments was provided with the Xplicit approach (Schad &amp; Schulz 2011, Schad 2013). Xplicit intended to reproduce natural pattern of exposure in space and time and to get more modular and open. Xplicit was applied to a range of pesticide risk assessment studies.  </p> <p> </p> <p>Illustration of the application of xplicit to a NTA study in hops in Germany (Fach\u00f6kotox-Tagung Landau 2010) </p>"},{"location":"xLandscape/xLandscape-intro.html#current-developments-and-future-directions","title":"current developments and future directions","text":"<p>In recent years, the demand for more realistic and holistic risk assessment of pesticide, their more targeted use and integrated pest control has ever increased (eg, EU Green Deal, EU Farm-to-Fork, EC Biodiversity Strategy, EC Nature Restoration Law, UNEP, Endangered Species, Reduction of Pesticide Use (JRC), EC Protection of Bees, EC Integrated Pest Management, Mixture Toxicity). These are global trends and already ongoing implementations. Simultaneously, data availability has been increased whilst cost were reduced (eg, EEA Data Hub, EU Crop Cover, BDTOPO France, Biodiversity, Species Monitoring), especially with remote sensing and related data preparation workflows (eg Copernicus, Google Earth Engine, Drones). Computing ressources have been increased significanty. With effect modelling (eg, ModelLink, Good Modelling Practice) model  predictions have reached the level of species' populations and ecosystems. Accross topics and initiatives we increasingly see an open source culture.  </p> <p>Todays' demands for modelling systems range from scenario-based integrated landscape models up to digital twins (eg, BioDT, Destination Earth).  </p> <p> </p> <p>EU Digital Twin (DestinE), as an illustration for a vision to integrate data and models of different topics to build a new model to simulate real-world phenomenons for decision support. Individual contributions are made according to individual domain expertise. A loop of monitoring and modelling improves the system. </p> <p>Given the complexity of real-world systems, hence approaches, together with the range of disciplines needed, it is no longer advisable, nor justifiable, to try real-world (landscape) modelling in isolation - Collaboration is the paradigm. </p>"},{"location":"xLandscape/xLandscape-intro.html#today-applicable-landscape-models-needed","title":"today - applicable landscape models needed","text":"<p>Today, the landscape level has been established in pesticide RA throughout species groups (eg, aquatic, nta, bees, ntp, birds, mammals,endangered species) and global regions. This, either as an explicit RA level (eg, EFSA Aquatic Guidance, graphic below) or implicitely as to provide the real-world context for system behavious (eg, population recovery option EFSA Recovery Option). Beyond actual RA, this is accompanied by numerous research activities towards holistic RA in the regulatory scientific community (eg, global conference progams of the Society of Environmental Toxicology and Chemistry, SETAC).  </p> <p>Landscape modelling approaches are needed to address these demands. However, heterogeneous complex approaches for each and every study question are unlikely to succeed in the long run. An open, modular, and so collaborative approach seems more promising. </p> <p> </p> <p>EFSA Aquatic Guidance Tier4 landscape risk assessment level </p> <p>Experiance together with future directions (above) set the scene for making steps towards a next generation landscape modelling approach: </p> <p>General requirements and design principles: </p> <ol> <li>A modular approach that allows to integrate existing models into a landscape modelling context.  </li> <li>The integration assures (inner) data and information consistancy, making use of semantics.  </li> <li>Modules can be developed by everyone. External modules (the actual function-providing models) become integrated components using a wrapper.  </li> <li>A core implements the key landscape modelling functionality and semantics (not more). Modules interact with the core.  </li> <li>The composed landscape model appears to the user as any other model, ie it takes inputs (parameterisation, data) and generates outputs.  </li> <li>The implementation process is agile. It is driven by todays' demands (working product) whilst being adaptable in the frame of anticipated developments.  </li> </ol> <p>Landscape Modelling requirements and design principles:</p> <ol> <li>The landscape model works discrete (numeric). Its core dimensions are space and time. It is spatiotemporally explicit. </li> <li>Further modelling dimensions can be introduced by the modelled topics, eg, exposure (of different landscape entities) and effects (and their Specific Protection Goals dimensions, eg, biological entity and attributes).</li> <li>Landscape modelling comes with a strong spatial perception ('maps'). Spatial entities can be represented in any format (eg, raster, vector), scales and shape. Data extent is only limited by computing ressources. The model core, together with corresponding components (modules) inputs external data into inner data stores, which operates semantically-enriched and assures data consistency throughout consuming components. </li> <li>Likewise, the temporal dimension can use the units as needed to represent dynamics of the modelled systems. These can be different in the different components.</li> <li>Data for this multidimensional modelling are held in a multidimensional datastore. The technical representation is independent from the conceptual, ie different data store technologies can be used.</li> <li>The Landscape Model basically implements a Monte Carlo approach. This allows to propagate variabilities (uncertainties) of the natural system (eg, land use, PPP use, weather conditions) to variabilities of the outcome (eg, exposure, effects to organisms). </li> <li>The model works with Semantics to assure mutual 'understanding' of data and models. Semantics are stepwise implemented, starting with physical units, scales and metadata, and are developed up to the use of ontologies. </li> <li>The model is open to introduce new entities, scales and units.</li> <li>The design is based on Component Based Software Engineering (CBSE). The core is considered to work as a microkernel, the components represent the models that bring the actual functionality.</li> </ol> <p>further aspects:</p> <ol> <li>Given its fundamental context, the design of the Landscape Model has at least roots in pesticide risk assessment and risk management (decision support) and related topics like landscape biodiversity enhancements. It is build for use in the regulatory scientific community.  </li> <li>Components and their inner models (modules) can be data-driven, mechanistic or hybrid.  </li> <li>A common and easy to learn programming language is used for the implementation of the core and its functionality. Phyton was selected for this. However, components (moduls) can be implemented in basically any language (eg, C, C++, Go, netlogo). The same applies to core functionalities that might have specific needs, eg for speed or parallelisation.  </li> <li>A basic paradigm is scalability. Basically, the spatial and temporal extent of simulations shall not be limited by design, but only by given computing ressources.</li> <li>The development, use and work around a Landscape Model come with differnt roles. Roles have a specific purpose and require different skills, documentation, and traing. Thus, roles need an explicit awareness and definition: eg, 'Core Developer', 'Module Developer', 'Landscape Model Builder', 'Landscape Model User (expert, trained)', 'API Consumer'.</li> <li>During initial development phase, the Landscape Model usability mainly addresses the expert user, ie those who know the purpose, have experiance with modelling on a technical level (eg, understanding the meaning of a certain parameterisation, using xml). Of course, Graphical User Interfaces (eg, an Integrated Development Environment (IDE) for Landscape Model composition) and web-browser-based interaction (eg, for Landscape Model execution and analysis) is important and envisaged.</li> <li>The implementation shall make use of modern versioning and collaboration approaches and systems (eg, Github).</li> <li>The development shall not be done in isolation, but of open minded culture (agile). Whilst trying to get a working product, continued exchange with the communities and research on technologies facilitate adaptivity.</li> <li>The products basically persue an open source culture and paradigm. This applies eg, to the Landscape Model core xlandscape and the majority of components and Landscape Models (eg, xAquatic). However, due to insitutional licence policies some components might be open access, ie are open for use but without the source code of the actual model (eg, Cascade-Toxswa). Of course, the entire Landscape Modelling approach can be used for entirely internal and private developments. This allows hybrid Landscape Models for which some functionality can even get patented.  </li> <li>Last but not least: imagine you are about to develop a specific population model, say an amphibian model, for pesticide RA. Without a modular Landscape Modelling system you'll need to develop anything outside your model yourself, eg, landscape environmental and agricultural scenarios, PPP use, exposure and efate. With such an approach, you can make use of all data and components available, add specific needs (eg, a microclimate model) and focus on your key model development. This is what is called separation of concern.  </li> </ol> <p>Remark: Intense research and trials to work within existing systems (eg, working within GIS systems, close to big-data spatial databases (eg rasdaman), Almass, OpenMI, and a range of related approaches) all ended up in dead ends for the purposes and needs of our work in environmental risk assessment, risk management and the more generic fields (as outlined above). This is why we indentified the need for own developments.</p>"},{"location":"xLandscape/xLandscape-models.html","title":"xLandscape Models","text":""},{"location":"xLandscape/xLandscape-models.html#xaquatic-invertebrates","title":"xAquatic-Invertebrates","text":""},{"location":"xLandscape/xLandscape-models.html#xaquatic-plants","title":"xAquatic-Plants","text":""},{"location":"xLandscape/xLandscape-models.html#xofffieldsoil","title":"xOffFieldSoil","text":"<p>Ref.: A spatiotemporally explicit modeling approach for more realistic exposure and risk assessment of off-field soil organisms</p>"},{"location":"xLandscape/xLandscape-models.html#xpollinator","title":"xPollinator","text":""},{"location":"xLandscape/xLandscape-models.html#xtoxicload","title":"xToxicLoad","text":""},{"location":"xLandscape/xLandscape-models.html#xnttp","title":"xNTTP","text":""},{"location":"xLandscape/xLandscape-outlook.html","title":"Outlook","text":""},{"location":"xLandscape/xLandscape-outlook.html#integrated-development-environment","title":"Integrated Development Environment","text":"<p>(IDE)</p>"},{"location":"xLandscape/xLandscape-outlook.html#for-building-landscape-models","title":"for Building Landscape Models","text":"<ul> <li>visual composition of landscape models</li> </ul>"},{"location":"xLandscape/xLandscape-outlook.html#for-building-components","title":"for Building Components","text":"<ul> <li>codeless</li> </ul>"},{"location":"xLandscape/xLandscape-outlook.html#client-server-web-based-use","title":"Client-Server / Web-based Use","text":""},{"location":"xLandscape/xLandscape-outlook.html#version-2x","title":"Version 2.x","text":"<p>The design of version 1.x was influenced by the goal to combine existing models (often such established in regulatory RA) into a landscape-scale modelling composition. Since then, </p> <ul> <li>new smaller process models that integrate better into spatiotemporally explicit landscape-scale simulations</li> </ul>"},{"location":"xLandscape/xLandscape-outlook.html#cbse-adaptation","title":"CBSE Adaptation","text":""},{"location":"xLandscape/xLandscape-outlook.html#adapted-core-competencies","title":"Adapted Core Competencies","text":""},{"location":"xLandscape/xLandscape-parameterisation.html","title":"Parameterisation","text":""},{"location":"xLandscape/xLandscape-parameterisation.html#assign-parameters-to-parameter-level","title":"Assign Parameters to Parameter-level","text":""},{"location":"xLandscape/xLandscape-parameterisation.html#xrun","title":"xrun","text":""},{"location":"xLandscape/xLandscape-parameterisation.html#xml","title":"XML","text":""},{"location":"xLandscape/xLandscape-parameterisation.html#yaml","title":"YAML","text":""},{"location":"xLandscape/xLandscape-parameterisation.html#excel","title":"Excel","text":""},{"location":"xLandscape/xLandscape-references.html","title":"References","text":""},{"location":"xLandscape/xLandscape-references.html#publications","title":"Publications","text":"<p>Conference Contributions</p> <p>Schad 2013: xplicit xxx</p> <p>Schad, T. Schulz R, G\u00f6rlitz G, Neumann P. 2011. Xplicit - Concepts and Model Development for  Probabilistic Spatiotemporally Explicit Exposure and Risk Assessment (ERA) for Plant  Protection Products - Introduction and Example Study for Non-Target-Arthropods (NTA).  SETAC Europe 21st Annual Meeting, 15-19 May 2011, Milan, Italy. </p>"},{"location":"xLandscape/xLandscape-technology.html","title":"Technology","text":""},{"location":"xLandscape/xLandscape-technology.html#explicitness","title":"Explicitness","text":""},{"location":"xLandscape/xLandscape-technology.html#monte-carlo","title":"Monte Carlo","text":""},{"location":"xLandscape/xLandscape-technology.html#multidimensional-data-storage","title":"Multidimensional Data Storage","text":""},{"location":"xLandscape/xLandscape-technology.html#interfaces","title":"Interfaces","text":""},{"location":"xLandscape/xLandscape-v1x.html","title":"Version 1 - Summary","text":"<p>The first major release (version 1.x) implements key goals as summarised the Introduction. The design is based on Component-Base-Software-Engineering (CBSE). So, xLandscape is not a model but a framework to build models, with a core functionality for numeric, multidimensional landscape modelling.  </p> <p>xLandscape major entities:</p> <ol> <li>Core: inspired by microkernel architecture in CBSE context. Represents key features of the modular landscape modelling approach. Components are connected to the core and controlled by the core (necessary minimum). Provides a multidimensional data store. Organises model inputs.</li> <li>Components: colloquial the modules of the modular approach. Represent the actual funtionality of a landscape model. Can be quite simple (eg, estimation of water temperature from air) or quite complex (eg, calculating substance transport in streams). Technically precise, components are build from wrapping scientific models (called 'the module of a component').</li> <li>xLandscape Models: an applicable landscape model for a specific purpose. The composition of components and the core (Example xLandscape Models). </li> </ol> <p> </p> <p>Illustration of the xLandscape ecosystem: components, Core, Models, as well as 'Analysis&amp;Reporting Elements' </p> <p>xLandscape Characteristics:</p> <ol> <li>Numeric approach that works with discretised entities: time is discretised in time steps (any step possible, 'hour' and 'day' are typical in different processes). Spatial entities can be eg, vector polygons or raster cells. This makes xLandscape a spatiotemporally explicit model.</li> <li>Explicit scales: phenomenons like variability are assigned to specific scales. Eg, variability of spray-drift deposition might be observed on a field-scale. Likewise, explicit scales serve as important units in the analysis of landscape modelling outcome, eg. to provide endpoints that fit to the definition of Specific Protection Goals.</li> <li>Monte Carlo: variability (and uncertainty) are represented by Probability Density Functions (PDFs). This, together with the spatiotemporally explicit approach, provides the functionality to propagate variability of landscape processes, activities and dynamics to landscape model outputs.  </li> <li>Multidimensional data storage: Environmental characteristics, agriculture, PPP use, exposure, effects and their attributes, space and time, make xLandscape a multidimensional approach. These data are stored in a  multidimensional storage. Currently, the Hierarchical Data Format (HDF) is used. At the end of a xLandscape-based model simulation all data resides in the HDF store.</li> <li>Semantics: xLandscape introduces semantics to improve meaning of data. This is done in a stepwise way. Currently, values have a unit and scale assigned.</li> <li>Sequential processing: in version 1.x components are executed in a sequential order.</li> <li>'xcopy' distribution: an xLandscape-based model can be copied (downloaded) and used without installation. The xLandscape core comes with its Python environment and each component with their required runtime environment.</li> <li>Scalability: basically, the spatial and temporal extent, as well as other simulation characteristics (eg, the number and detail of endpoints) are only limited by computing ressources. Scaleability is a central requirement, also to the design of components. Ideally, processes should show a linear scaling behaviour. Besides actual landscape models build with xLandscape, the related analysis software need to cope with (large) raw data volumes typically generated.</li> <li>Scenarios: each specific model built with the xLandscape approach has its specific scenario requirements. As long as data requirements can be fulfilled, scenarios of any (global) region and any time period can be used as model input. Scenarios can be of any spatial shape. See also scenarios in the Glossary.</li> <li>Analysis- and Reporting Elements: example analysis code and outputs (eg, tables, graphics) are prepared. Typically, Jupyter notebooks are used, each focusing on a certain analysis topic.</li> </ol>"},{"location":"xLandscape/xLandscape-v1x.html#applicability","title":"Applicability","text":"<p>The application of xLandscape framework is not limited to its original key purpose for RA, ie to generate model results for RA endpoints (exposure, effects). xLandscape can be employed for modelling quite a large range of spatiotemporally phenomenon, eg, to model the spatiotemporally occurrence of bee forage (nectar, pollen), the use of pesticides in cultivated landscapes, the toxic loads of chemicals in landscapes, etc.</p>"},{"location":"xLandscape/xLandscape-v1x.html#programming-language","title":"Programming Language","text":"<p>The xLandscape core and components building software are written in Python. This language was choosen for its properties, popularity and ease to learn. However, compute demanding processes can be written in basically any language (eg, C, C++, Go) and be integrated as Python packages. The inner model of components can be written basically in any language. The component building process wraps such software, typically including the software (model) specific runtime environment. Development is versioned and currently done using Github (Github/xLandscape).</p>"},{"location":"xLandscape/xLandscape-v1x.html#core","title":"Core","text":"<p>The modular approach of xLandscape does not intend to loosely couple models. There is a 'framing' element necessary to represent characteristics that make a landscape model according to the use context, goals and requirements (see Intro). The 'core and component' design was inspired by microkernel architecture in Component-based Software Engineering (CBSE) context. Represents key features of the modular landscape modelling approach. Key core functionality and characteristics:</p> <ol> <li>The core provides the (Python) framework to build components (eg, interfaces for data exchange, data semantics, initialisation, control, component self-description, status request)</li> <li>The core provides the framework to build compositions, ie actual landscape models (currently implemented as XML)</li> <li>The core provides the framework for a 'semantic context' that enables operating with explicit entities (eg, scales) and assures inner landscape model data consistency</li> <li>The core provides the framework for operating with multidimensional data</li> <li>The core provides functionality for landscape simulation control, status observer, ressources and logging</li> <li>The core provides functionality for reading the parameterisation and configuration of a Landscape Model as defined by the user</li> </ol> <p>This is illustrated as the blue 'L' together with the light blue background in xLandscape model schemes:  </p> <p> </p> <p>xlandscape core illustration</p>"},{"location":"xLandscape/xLandscape-v1x.html#components","title":"Components","text":"<p>Essentially all functionality is represented by components. Components are initiated by and operated in the framework of the core. A composition of the core and components make a Landscape Model. Components can contain and represent basically any simulation model, eg,</p> <ul> <li>(Large) Mechanistic models, eg, simulating substance exposure, fate and effects (eg, PRZM, PEARL, Macro, Cascade-Toxswa, GUTS, Mastep, Streamcom)</li> <li>Data-driven models, eg, representing variability of spray-drift deposition (eg, xDrift, AgDrift), results from ecotoxicologial studies (eg, Dose-response, Species Sensitivity Distributions, Toxic-Load), or lookup tables (eg, bee forage production by vegetation and time)</li> <li>Hybrid models, eg, for simulating residues of substances in plants and commodities</li> <li>Models simulating agricultural management, eg, PPP use (eg, xCropProtection)</li> <li>Small calculations, eg for modelling specific environmental conditions (eg, sunshine hours, water temperature)</li> <li>(Geo)data inputs: external data is imported into a Landscape Model using specific components, eg, weather, land use, or soil data. Besides such explicit data inputs. This applies, eg, when complex mechanistic models bring some default settings with them which are loaded using text-files.</li> <li>Analysis: when a simulation is done it might be nice to see some analysis automatically. So, components can be build and integrated into a Landscape Model for analysis purposes</li> </ul> <p>Colloquially, we might call the pieces of a modular Landscape Model modules, eg say 'xDrift is a module in the xAquatic landscape model', or 'in which repository can I find the module for PPP use?'. However, following the terminology of Component-Based-Software-Engineering (CBSE), we need to be more precise and talk about components. A component contains a model which is also called a module. Models (modules) represent the actual functionality. A model (module) becomes a xLandscape component when it is wrapped using the xLandscape core framework.</p> <p>The graphic below shows the design of a component:  </p> <p> </p> <p>Component 'Stream_Temperature' representing a model to estimate stream temperature (T_stream) from air temperature (T_air). (a blue background indicates connection to an internal source (semantically enriched), whereas a grey background represents connection to external sources; the diamond represents the actual model ('module'))</p> <p>A component has the following elements: </p> <ol> <li>Input: the data input to be processed by the component. Inputs can be connected to external data sources (eg, files, data bases, APIs) (grey background) or to the internal multidimensional store (blue background)</li> <li>Init/Control: inputs for the initialisation and control of a component and its module (model). Init/Control can come from  external data sources (eg, xml/text files) (grey background) or from the internal multidimensional store (blue background)</li> <li>Output: the data output of a component. Outputs are typically written to the internal multidimensional store (blue background) yet, can also be written to external data storages (eg, Relational Database Management Systems, files, cloud storage) (grey background)</li> <li>Module (model): the actual model (module) that provides the functionality, ie, conducts the simulation (blue diamond element)</li> </ol> <p>All internal data (information) is semantically-enriched (see Semantics). Components typically have multiple in- and outputs. Example components are introduced in section Components.  </p>"},{"location":"xLandscape/xLandscape-v1x.html#landscape-model-composition","title":"Landscape Model Composition","text":"<p>A composition of components and the core builds a landscape model. Example Landscape Models built are xAquatic, to simulate exposure and effects of aquatic organisms in catchments, xOff-Field-Soil, to calculate exposure of soil organisms living next to fields, or xPollinator to simulate nectar and pollen occurrence for building bee modelling scenarios.</p> <p>The graphic below shows the composition of a very simple Landscape Model that inputs a stream network, together with weather data, in order to calculate stream temperature:</p> <ul> <li>The model is built using 2 components: 'Weather_MARS' inputs (external) weather data (from the EU 'MARS' database) and writes defined data (eg, air temperature, T_air) into the landscape model storage, whereas component 'Stream_Temperature' takes T_air from the store and transfers this to an estimated stream temperature (T_stream) using a model.</li> <li>The blue 'L' represents the xLandscape core. The light blue rectancle-shaped background represents the semantically-enriched space of this specific model (eg, T_air is defined with a unit and assigned spatial and temporal scales; T_air is consistantly available to all components of the model).</li> <li>The Landscape Model is parameterised and configured using XML and YAML files (eg, to define the landscape scenario and simulation time period; grey box)</li> <li>Typical landscape model input data (green box) comprises land use/cover, weather, habitats and pesticide use, yet, depends on the landscape model.</li> <li>The Data Storage contains all data defined by the landscape model designer, as relevant to the landscape model application (inputs, interim, and model outputs). Thus, the Data Storage can be recognised as representing 'the landscape' from the view of the model purpose. Eg, xAquatic stores data on land use, weather, hydrology, PPP use, stream exposure and effects on aquatic invertegrates, whereas xPollinator outputs stores nectar and pollen occurrence by space and time. The Data Storage is multidimensional. </li> </ul> <p> </p> <p>Illustration of a simple Landscape Model, built from 2 components (Weather_MARS, Stream_Temperature) and the xlandscape core</p>"},{"location":"xLandscape/xLandscape-v1x.html#propagation-of-variability","title":"Propagation of Variability","text":"<p>Taking the protection of species' populations in cultivated landscapes as an example topic for xLandscape, from the use of PPPs in landscapes to the exposure pattern of non-target-organisms many processes and phenomenons come with a range of variabilities (eg, weather conditions, land use/cover dynamics, agricultural management and PPP use, species occurrence and behaviour, etc.).  </p> <p>xLandscape basically 'resolves' such variabilities by discretisation, ie by making things explicit (this is, what the suffix 'x' represents). Eg, the actually continuous (simulation) time is discretised into time steps (of any interval, often [day] or [hour]), spatial entities are discretised using resolutions depending on the individual process (eg, [1m2] for local spray-drift exposure, [100m] segments of stream networks). However, explicitness alone is not a sufficient means to represent natural variability of phenomenons, events and processes, of natural systems, eg, an explicit representation of land use (in space and time) requires that land use is deterministically know for the simulation region and the simulation period (eg use satellite classification). This is often not the case and only general knowledge is available (eg, statistical data and crop cultivation and rotation). Even if full deterministic data is available for a phenomenon (eg, for weather representation by using long-term records) the purpose of a landscape simulation might require to go beyond actual data and consider situations (eg, extremes) which are not part of an actual record. This is a typical situation in regulatory risk assessment where the range of conditions that might happen has to be considered in order for the (prospective) decision making to cover these. This is where the use of distributions comes in. In xLandscape, variability can be represented as Probability Density Functions (PDFs). Examples for using PDFs are wind direction distributions, PPP application windows and application rates, local spray-drift depositions in the (xDrift) component or drift-filtering by riparian vegetation. The scope of validity of a PDF and its elements have to be defined, eg, a weather conditions representing PDF might be valid for a certain geographic regions and a certain time period, it's elements might be valid for a certain day. Thus, samples drawn from this PDF are associated to the scales [region,day]. Irrespective which component asks for weather conditions, the result should be the same for the same region and day, but different for different regions and/or days (corresponding to the random sample of the PDF). This mechanism of scale-dependent definition and use of PDFs enables to build a Monte Carlo approach that generates naturally occuring pattern of the simulated agro-environmental system. In other words, real-world variability comes with pattern, ie, is not just random (an overly simple, independently sampling Monte Carlo approach would just generate chaotic situations).  </p> <p> </p> <p>Propagation of landscape agro-environmental system variability to variability of model predictions</p> <p> </p> <p>Real-world variability has structure, ie, comes with pattern</p>"},{"location":"xLandscape/xLandscape-v1x.html#components-modules-and-models","title":"Components, Modules and Models","text":"<p>You will read the term component quite often in the context of xLandscape. xLandscape is a modular landscape modelling framework that architecture is derived from Component-Based Software Engineering (CBSE). This is, why the elements of a modular xLandscape model are called components (xDrift is an example for a frequently used component). Components contain moduls. Modules represent the software that provides the actual functionality of a component, typically a model (eg, an exposure or environmental fate model).  </p>"},{"location":"xLandscape/xLandscape-v1x.html#multidimensional-data-store","title":"Multidimensional Data Store","text":"<p>Landscape models based on xLandscape is at minimum 3-dimensional (space, time, modelled value). Typically, landscape modelling is using and interested in multiple values in space and time (eg, exposure of different compartments, multiple PPP uses, effects of different species), which makes it a multidimensional landscape model. Corresponding multidimentsional data is stored using a multidimensional data store. At present, HDF is being used. All landscape model data as defined by the model designer is stored in an HDF store (basically, the in- and outputs of components). Data in the store can come in independent resolutions (eg, PPP use might be represented by the spatial scale field, whereas local exposure of off-field areas might be calculated and stored by m2 as spatial scale). The same applies to any other dimension and scale. As the multidimensional store contains the data relevant to the specific landscape model, it represents 'the landscape' of the model. Thus, 'the landscape' is built of such data/information that is defined by model design (and configuration). In particular, the store contains the actual model outcome, yet, also any other data is kept as defined by the model designer that might be of interest for the analysis. At present, a single data store is being used. This, and the technology HDF can be adapted according to future needs.  </p> <p> </p> <p>Multidimensional Data Store is implemented in the xAquatic landscape model</p>"},{"location":"xLandscape/xLandscape-v1x.html#relational-data-representation","title":"Relational Data Representation","text":"<p>With the key aim to facilitate model outcome analysis using common data access technologies, a component (xSQLite) is available that exports defined data from the HDF to SQLite database. Further data exports are under development.  </p>"},{"location":"xLandscape/xLandscape-v1x.html#sequential-processing","title":"Sequential Processing","text":"<p>At version 1.x, xLandscape has a linear processing sequence. Eg, in a given (or modelled) land use the farmer applies PPPs. These PPPs cause exposure which is subject to substance environmental fate (eg, degradation, distribution). The exposure might cause effects to non-target-organisms. This sequence matches natural causality in a majority of landscape modelling applications, in particular in pesticide risk assessment. However, future demands for landscape modelling might lead to increased autonomy of components' operation. This sequence is defined in the model configuration file (currently the mc.xml) in the landscape model design phase. Thus, there are no feedback loops from subsequent components to predecessors.  </p> <p> </p> <p>Example sequential processing in xAquatic (2022)</p>"},{"location":"xLandscape/xLandscape-v1x.html#semantics","title":"Semantics","text":"<p>When building larger models from individual components, these components need to have a correct understanding of the data/information they exchange. The meaning of values exchanged in inputs and outputs of components need to be clearly described. The goal in xLandscape is that components understand each other on a machine-level, ie, without any human interference. This level of semantic representation can be reached using ontologies. In any case, data/information need to be sufficiently documented and described (metadata).  </p> <p>The implementation towards this goal is stepwise: - Current version: values have units, explicit scales; in the landscape model design phase, module developer might need to communicate to clarify semantics (in addition to proper use of metadata). - Next: apply ontolgies (eg, using RDF format)</p>"},{"location":"xLandscape/xLandscape-v1x.html#model-input-geodata","title":"Model Input (Geo)Data","text":"<p>Input data is specific to the actual landscape model built with the xLandscape framework. Basically, input data are read by individual components and transferred into the Multidimensional Store. In this process the data get's semantically enriched. All components then consistently use the same data, eg, environmental or landuse data. Data typically come in their native format, eg, geodata as shapefiles, weather data as textfiles or database tables, etc.  </p>"},{"location":"xLandscape/xLandscape-v1x.html#model-output","title":"Model Output","text":"<p>At present, modelling outcome of landscape models built using the xLandscape framework are stored in a (multidimensional) HDF Store. Common data analysis software and programming languages provide interfaces to HDF. In addition, components are available and being developed that enable export of data that resides in the HDF store to common data formates (eg, SQLite, other relational databases, csv, or excel).</p>"},{"location":"xLandscape/xLandscape-v1x.html#analysis","title":"Analysis","text":"<p>Landscape model outcome can be analysed using common analysis software package or own developed processes. Typically, landscape models built on the basis of xLandscape contain analysis components that process raw model outcome and provide first insights into the results of an experiment.  </p> <p>Jupyter notebooks (using Python) are used as a means for data analysis. Templates are provided in corresponding Github repositories. Dashboards provide an ideal means to derive insights.</p>"},{"location":"xLandscape/xLandscape-v1x.html#development-and-user-level","title":"Development and User Level","text":"<p>Typically, landscape models developed built using the xLandscape framework address an expert user level, like any other model used in the regulatory scientific field (eg, FOCUS exposure models, effect models). However, irrespective of their complexity, these landscape models can be operated in the background (eg, on a back-end server) and only their key outcome displayed or integrated at a user front-end level (like a simple weather forecast is derived from complex weather models).</p> <p>Differentiation of developer levels are shown in the graphic below.</p> <p> </p> <p>Development and User Levels</p>"},{"location":"xLandscape/xLandscape-v1x.html#technical-implementation","title":"Technical Implementation","text":"<p>The xLandscape core is written in Python, hence, building components is done in Python as well. The actual modules, ie, the models within components that provide the actual modelling functionality of a component can be written in any language.  </p> <p>Code documentation can be found in the corresponding Github repository (eg, https://github.com/xlandscape).</p>"},{"location":"xLandscape/reference/glossary.html","title":"Glossary","text":"<p>Basically, all xCP entities are defined close to the real-world objects they represent (overview graphic on xCP Entities in Indication). </p>"},{"location":"xLandscape/reference/glossary.html#active-substance","title":"Active Substance","text":"<p>An active substance (a.s.) in a plant protection product is any chemical, plant extract, pheromone, or micro-organism (including viruses) that acts against pests or affects plants, parts of plants, or plant products (https://food.ec.europa.eu/plants/pesticides_en). Essentially, it's the component that provides the intended protective or pesticidal effect. Active Substances have physical and chemical properties as well as ecotoxicological endpoints. These data are kept in corresponding databases. </p>"},{"location":"xLandscape/reference/glossary.html#application","title":"Application","text":"<p>When a PPP is/PPPs are applied to a certain crop at a certain field we call this an Application. Typically, a farmer puts a PPP (or a set of PPPs) into a spraying tank, fills the tank up with water, drives to the field and sprays the solution onto the field (into the crop). In xCP context, the term Application is used close to agricultural practice, yet, is related to its use in pesticide risk assessment, especially the exposure modelling part.  An Application is defined by  - the PPP (or PPPs) to be applied  - an Application Rate (eg, in [\u00b5g a.s./ha] or [mL PPP/ha])  - a time when the application is intended (eg, deterministic day or a time window with a related distribution function)  - the technology with which the application will be done (eg, boom sprayer)  - risk mitigation measures (eg, spray buffer, in-crop buffer, drift-reducing nozzles) </p> <p> PPP spray application using a boom sprayer </p> <p>Remark: Influenced by classic exposure modelling, at the current development status, the definition of an Application includes the definition of an application timing, although in agricultural practice typically the use of a PPP is related to crop development stages. Thus, currently, the modeller has to determine the dependence of regional crop development with time. Future xCP versions are planned to allow defining an Application related to crop development stage (which can be provided by databases or crop development modelling).   </p>"},{"location":"xLandscape/reference/glossary.html#application-rate","title":"Application Rate","text":"<p>In agricultural practice, the amount of PPPs applied to a field is usually determined as amount PPP by field area.  The farmer typically determines the volume PPP [mL] by field area [ha] (eg, considering the crop development status, 'the higher the crop the more PPP needed').  As risk assessment often focuses on active substance (a.s.), so does modelling. Therefore, in xCP the Application Rate can be defined as amount a.s. or PPP per field ares (eg, [\u00b5g a.s./ha], [mL PPP/ha]).</p>"},{"location":"xLandscape/reference/glossary.html#application-sequence","title":"Application Sequence","text":"<p>A sequence of individual PPP Applications. Each individual Application within an Application Sequence can be defined independently. Thus, an Application Sequence can represent, eg, the multiple use of the same PPP (PPPs) using the same technology and risk mitigation, yet, at individual application rates (eg, as often the case for fungicide uses in orchards). However, an Application Sequence can also represent uses of different PPPs in a sequence (as illustrated in the graphic below).   </p> <p> Illustration of a PPP application sequence using different PPPs (https://rwz.ag/fileadmin2023/Agrarhandel/Weinbau/Mosel/240124_bild_weinbauempfehlung-pflanzenschutz-mosel.png)</p>"},{"location":"xLandscape/reference/glossary.html#application-window","title":"Application Window","text":"<p>The time when an application is planned to be conducted. In a modelling experiment using xCP, an Application Window can be a deterministic day or a time span (eg, 1.-14. April). In the latter case, a probability distribution function is assigned to an application window from which actual application dates are sampled during model runtime. </p> <p>Remark: Influenced by classic exposure modelling, at the current development status, the definition of an Application includes the definition of an application timing (Application Window), although in agricultural practice typically the use of a PPP is related to crop development stages. Thus, currently, the modeller has to determine the dependence of regional crop development with time. Future xCP versions are planned to allow defining an Application related to crop development stage (which can bw provided by databases or crop development modelling). Also, typically farmers' decisions depend on agricultural and environmental conditions. xCP is planned to allow the definition of such dependency rules, eg, not to conduct a certain spray application when a rainstorm is predicted by weather forecast.  </p>"},{"location":"xLandscape/reference/glossary.html#buffer","title":"Buffer","text":"<p>A distance ([m]) that is kept (has to be kept) to a certain entity during an agricultural activity. Buffers are typically used to implement risk mitigation means, eg, to reduce spray-drift depositions into habitats of non-target-organisms. To protect aquatic organisms no-spray buffers are defined as distance to water bodies (eg, a PPP is allowed to be spray no closer than 10 m distance to streams). To protect terrestric organisms, often in-field or in-crop buffers are defined (eg, spraying has to keep a 5 m distance from the cropped/field boundery).</p>"},{"location":"xLandscape/reference/glossary.html#configuration","title":"Configuration","text":"<p>As for each xLandscape component and landscape model, user simulation inputs and control settings are separated in two different levels, a Configuration and a Parameterisation level: - the configuration of a component (like xCP) allows to change fundamental model behaviour (eg, minimum sprayed area, in-crop buffer calculation). - the Parameterisation level of a component represent the actual user interface, ie, the model parameters exposed to the user. Inputs made by the user in the parameterisation file define a landscape modelling Experiment.  </p> <p>The decision on which model component parameters should be exposed as user interface in the Parameterisation level depends on the purpose of the model and the user group. The assignment of model component parameters to either the configuration or the Parameterisation level can be changed with minimum effort (xLandscape-Parameters).  </p> <p>Both, configuration and Parameterisation refer to direct user inputs (user interaction) and are separated from more extense data inputs like land use data, weather data or pesticide phys-chem properties. Typically, in the user inputs links to such databases to be used in a landscape modelling Experiment are defined wheras the actual data are taken from these databases.  </p>"},{"location":"xLandscape/reference/glossary.html#crop-protection-calender","title":"Crop Protection Calender","text":"<p>The Crop Protection Calender (CPC) is a key parameterisation element of xCP. It is the entry point of each xCP PPP use scenario. In agricultural practice, pest control measures for a crop are typically planned based on experiance, PPP availability and other factors. Such planning can happen quite early in a season or closer to actual pest control. Crop protection plans are made eg, by official plant protection advisory services, farmers, or PPP producers. The term Calender is used to emphasise its temporal (crop development stage) aspects and similarity to everyday calenders we are used to.  adaptation). Besides reflecting ag practice, the approach of using a CPC also addresses modelling practice in risk assessment which typically focus on a certain indication, conducted over long time periods.  Beyond these established uses, alternative CPCs can be used to assess the environmental impact of alternative pest control options, or to design new pest control means against established ones, considered as baselines.  </p> <p>Summary on CPC characteristics: a CPC - is specific to a crop (or group of crops) - has a temporal validity, ie it can be constant over the entire model simulation period or can change at any (defined) time step - can be adaptive, ie can change during model runtime (eg, reacting on pest pressure)  </p> <p></p> <p> Visualisation of plant protection recommendations in apple for the forthcomming season (colors represent insecticides, fungicides, growth regulators and herbicides)</p> <p> Example plant protection recommendations in vines (Bayer AG)</p>"},{"location":"xLandscape/reference/glossary.html#experiment","title":"Experiment","text":"<p>The term Experiment has been introduced to xLandscape model simulations as an analogue to experimental setups. An Experiment has a single model parameterisation (including xCP parameterisation) and consists of a number of Monte Carlo runs. The latter are independent from each other, ie. in each Monte Carlo Run the defined variabilities (Probability Density Functions, PDFs) are independently sampled. As compared to experimental setups, the 'control' setup is basically assumed to be the no-PPP use, ie non-exposure situation. However, alternative baseline scenarios can be defined as separate Experiments (eg, representing alternative/'organic'/'biological' pest control measures) and their outcome considered in the (comparative) analysis.  </p>"},{"location":"xLandscape/reference/glossary.html#in-off-field-in-off-crop","title":"In-/Off-field, In-/Off-crop","text":"<p>In regulatory risk assessment in Europe, protection goals and risk assessment approaches are different for in-field and off-field areas. Basically, the in-field area is given by the property of the farmer and its bounderies (as you might find on cadastral maps). In cultivated landscapes, off-field areas are typically represented by parts of the field margin (eg, between roads and fields), riparian zones, wood margins. When you see vegetation strips between two arable fields, these are caused due to the working space of the agricultural machinery but  do not represent off-field areas as the two arable properties directly border to each other. In-crop simply represents the currently cropped area. Likewise, off-crop represents all (currently) non-cropped area. In-field off-crop areas are such within the field (property) of a farmer, yet, are currently not cropped. Such areas occur as (in-field) field margins, in some cases just left as a fallow strip, in others of sown flowering strip (to support wildlife and forage for insects). Such in-field margins are also intended to reduce potential run-off of pesticide residues from the field into off-field areas and streams.  </p> <p> </p> <p>Illustration of In-/Off-Field vs. In-/Off-Crop definition. The scheme on the left shows the definition as occurring in official documents. The image on the right shows a typical field situation (Hessian, Germany) Illustration of In-/Off-Field vs. In-/Off-Crop using a schematic scenario. The in-field (left part) is cropped (brown color), yet, has an in-field off-crop margin (light green). The off-field area (right part) is divided into two zones, representing two different land cover types in the expample (wood margin, wood core)</p>"},{"location":"xLandscape/reference/glossary.html#in-crop-buffer","title":"In-crop Buffer","text":"<p>As a Risk Mitigation option, typically to reduce spray-drift depositions into off-field areas, in-crop buffer represent a zone (distance [m]) from the cropped area boundery which must not be sprayed with the PPP of such a label instruction. Illustration of In-/Off-Field vs. In-/Off-Crop using a schematic scenario. The in-field (left part) is cropped (brown color), yet, has an in-field off-crop margin (light green) as well as an in-crop buffer (solid box). The cropped area within the in-crop buffer is allowed to be sprayed (solid box), whereas the cropped area outside is not. The off-field area (right part) is divided into two zones, representing two different land cover types in the expample (wood margin, wood core)</p>"},{"location":"xLandscape/reference/glossary.html#indication","title":"Indication","text":"<p>Generally, measures to protect plants (crop) from a certain pest. In xCP, an Indication is an explicit part of its parameterisation. An Indication is made of PPP Application Sequences, at minimum one PPP Application Sequence. If more than one Application Sequence is defined in an Indication, these sequences are considered alternative Application sequences ('OR' related). Thus, the xCP parameterisation entity Indication can be used to define alternative PPP use pattern, eg, reflecting product market shares or fractions 'biological' or 'organic' pest control means. Multiple Indications can be defined in an xCP parameterisation, as many as necessary to represent a simple or complex real-world PPP use pattern in one or many crops. Each individual Indication defined will be conducted in an xCP simulation. </p> <p> xCP entities and their relationship</p>"},{"location":"xLandscape/reference/glossary.html#monte-carlo-run","title":"Monte Carlo Run","text":"<p>Monte Carlo simulations rely on random sampling drawn from probability distributions to obtain numerical results. They can be used to model phenomena with significant variability (and uncertainty) in inputs, such as calculating the possible exposure profile of pesticides in streams in a catchment and the variability of possible effects to aquatic organisms. A nested (2D) Monte Carlo approach allows to also assess consequences of uncertainties to model outcome.  </p> <p>The xLandscape model is a numeric approach that works spatially and temporally explicit. Some phenomenons can be considered deterministic, eg, land use at a certain location and time (as derived from satellite data) or when using historic weather data. However, real-world phenomenons are sometimes not exactly known in space and time, eg, farming activities, catchment conditions or local wind conditions. In such cases, variability distributions can be derived (from data and/or expert judgement), modelled using Monte Carlo, in order to assess the range of possible consequences for the environment and for species. This is done in an xLandscape model by defining an Experiment which consists of a number of Monte Carlo runs to sample the range of possible conditions of the defined real-world landscape system.  </p>"},{"location":"xLandscape/reference/glossary.html#parameterisation","title":"Parameterisation","text":"<p>As for each xLandscape component and landscape model, user simulation inputs and control settings are separated in two different levels, a Configuration and a Parameterisation level: - the Configuration of a component (like xCP) allows to change fundamental model behaviour (eg, minimum sprayed area, in-crop buffer calculation). - the parameterisation level of a component represent the actual user interface, ie, the model parameters exposed to the user. Inputs made by the user in the parameterisation file define a landscape modelling Experiment.  </p> <p>The decision on which model component parameters should be exposed as user interface in the parameterisation level depends on the purpose of the model and the user group. The assignment of model component parameters to either the Configuration or the parameterisation level can be changed with minimum effort (xLandscape-Parameters).  </p> <p>Both, Configuration and parameterisation refer to direct user inputs (user interaction) and are separated from more extense data inputs like land use data, weather data or pesticide phys-chem properties. Typically, in the user inputs links to such databases to be used in a landscape modelling Experiment are defined wheras the actual data are taken from these databases.</p>"},{"location":"xLandscape/reference/glossary.html#plant-protection-measure-ppm","title":"Plant Protection Measure (PPM)","text":"<p>An action to prevent or control pests, eg, protecting apples against powdery mildew fungy or protecting olives against the white fly. In xCP, a Plant Protection Measure is represented by one or more Indications.  </p>"},{"location":"xLandscape/reference/glossary.html#plant-protection-product-ppp","title":"Plant Protection Product (PPP)","text":"<p>Plant protection products (PPPs) are chemical or biological products which are used to protect plants or plant products from harm caused by animals (eg, insects and rodents) or diseases such as fungal infestation. Products which are used to eliminate unwanted field weeds are also considered PPPs. The term \u201cpesticides\u201d is often used instead of plant protection product. PPPs contain one or more Active Substances and other co-formulants (substances which are supposed to have a positive effect on the production, storage or use of a product). The product itself is used in various forms, for example as spraying agents for seed treatment or in granular form.  </p>"},{"location":"xLandscape/reference/glossary.html#risk-mitigation-risk-mitigation-measures","title":"Risk Mitigation / Risk Mitigation Measures","text":"<p>Regarding the use of PPPs and from an operational point of view, here Risk Mitigation basically refers to reducing exposure caused by PPP application. For more information have a look into the outcome of the MAgPie Workshop.</p> <p>In xCP, currently the following Risk Mitigation measures are implemented: - no-spray buffer (typically defined in relation to water bodies) - in-crop buffer (a distance a farmer has to keep from the cropped boundery when spraying) - use of drift-reducing nozzles (sprayer technology to reduce drift)</p>"},{"location":"xLandscape/reference/glossary.html#scenario","title":"Scenario","text":"<p>In the context of risk assessment for pesticides, a Scenario refers to a set of conditions and assumptions used to model and predict the environmental fate and effects of pesticides. At lower tiers of the risk assessment procedure, Scenarios are designed to represent realistic worst-case situations to ensure that the risk assessments are protective of human health and the environment. When getting more realistic, at higher-tier risk assessment levels, Scenarios are intended to represent real-world conditions. Some key elements that define a scenario in this context:</p> <ol> <li>Abiotic Factors: These include non-living environmental factors such as soil type, climate/weather, landscape topology, and water bodies. For example, a scenario might consider how a pesticide behaves in sandy soil under high rainfall conditions. </li> <li>Biotic Factors: These involve living organisms that might be affected by the pesticide, including plants, animals, and microorganisms. The scenario might assess the impact on a specific species or a group of species. </li> <li>Agronomic Practices: This includes farming practices such as land use, crop rotation, land management, irrigation, and pesticide application methods. Different practices can influence how pesticides are distributed and degraded in the environment. </li> <li>Exposure Pathways: Scenarios consider how habitats and species might be exposed to pesticides, such as through forage, water, or contact. </li> <li>Temporal Aspects: The timing of pesticide application, its persistence in the environment and temporal relationship to the occurrence of species are crucial. Scenarios might model short-term (acute) and long-term (chronic) exposures.  </li> </ol> <p>By combining these factors, scenarios build a crucial basis to create a comprehensive picture of the potential risks associated with pesticide use.</p> <p>In xCP, the term PPP use scenario is sometimes used to address a certain Parameterisation of xCP (as part of a landscape model).  Likewise, modellers often talk about a landscape scenario meaning the certain geographic region for which eg, land use/cover, soil, weather and habitat conditions have been defined as basis for landscape-scale pesticide exposure and effect modelling. </p>"},{"location":"xLandscape/reference/glossary.html#simulation","title":"Simulation","text":"<p>The term Simulation is not precisely defined and is used somehow colloquial with different meanings. This is not a problem as the actual meaning typically gets clear in its use context: - a model simulation can just mean to parameterise and run a model in general - an xLandscape model simulation can mean to conduct an Experiment, ie, here the terms are used synonymously - a Simulation can also address an individual Monte Carlo run of an xLandscape model Experiment. </p>"},{"location":"xLandscape/reference/troubleshooting.html","title":"Troubleshooting","text":"<p>This page covers common error messages, what they mean, and how to resolve them.</p>"},{"location":"xLandscape/reference/troubleshooting.html#attributeerror","title":"AttributeError","text":"<pre><code>AttributeError: 'ConstantVariable' object has no attribute 'apply_today'\n</code></pre> <p>Explanation:</p> <p>This error occurs when <code>Indication</code> or <code>Indications</code> elements are misconfigured.</p> <p>Possible solutions:</p> <ul> <li>Check any <code>Indication</code> or <code>Indications</code> elements which are choice distributions. All their child elements must have probability attributes associated with them.</li> </ul>"},{"location":"xLandscape/reference/troubleshooting.html#fileexistserror","title":"FileExistsError","text":"<pre><code>FileExistsError: [WinError 183] Cannot create a file when that file already exists:\n'C:\\\\xCropProtection\\\\run\\\\Rummen-xCP-TestingScenario'\n</code></pre> <p>Explanation:</p> <p>A folder with the same name as <code>SimID</code> exists in the ...\\run\\ folder.</p> <p>Possible solutions:</p> <ul> <li>Delete or move the folder to run xCropProtection using that <code>SimID</code>.</li> <li>Change the <code>SimID</code> value to one that does not already exist in the ...\\run\\ folder.</li> </ul>"},{"location":"xLandscape/reference/troubleshooting.html#filenotfounderror","title":"FileNotFoundError","text":"<pre><code>FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\xCropProtection\\\\run\\\\T1EJS3N0CON7NRN3.xml'\n</code></pre> <p>Explanation:</p> <p>No run folder exists in the xCropProtection directory. This usually occurs the first time the repository is cloned from GitHub.</p> <p>Possible solutions:</p> <ul> <li>Create a new folder with the name run in the root directory of xCropProtection. This should be on the same level as the model and scenario folders.</li> </ul>"},{"location":"xLandscape/reference/troubleshooting.html#hdfview-error","title":"HDFview error","text":"<p>In rare cases, opening \"AppliedAreas\" generated from a large amount of input data may cause HDFView to crash due to its data type. Use xCP_write_csv.ipynb to write the data to a csv.</p>"},{"location":"xLandscape/reference/troubleshooting.html#keyerror","title":"KeyError","text":"<pre><code>appl_window = self._applicationWindow.get((day, field), (\"time/day, space/base_geometry\"))\n  File \"C:\\xCropProtection\\model\\core\\components\\xCropProtection\\distributions.py\", line 264, in get\n    return self._value[conv_index]\nKeyError: (730121,)\n</code></pre> <p>Explanation:</p> <p>An <code>ApplicationWindow</code> has a <code>scales</code> value of \"time/day\" or \"time/year\".</p> <p>Possible solutions:</p> <ul> <li>Determine which <code>ApplicationWindow</code> element has a <code>scales</code> value of \"time/day\" or \"time/year\". Set <code>scales</code> to \"global\" (including quotation marks).</li> </ul>"},{"location":"xLandscape/reference/troubleshooting.html#valueerror-chunk-shape","title":"ValueError: chunk shape","text":"<pre><code>ValueError: Chunk shape must not be greater than data shape in any dimension. (1,) is not compatible with (0,)\n</code></pre> <p>Explanation:</p> <p>The number of applied areas calculated by xCropProtection is different than the expected value. Incorrect or overly restrictive constraints on dates, fields, or crop type may result in zero applications being performed during the simulation.</p> <p>Possible solutions:</p> <ul> <li>Check the value of <code>SimulationStart</code> and <code>SimulationEnd</code> in template.xrun. Compare these values to the <code>TemporalValidity</code> defined in all PPMCalendars used in the xCropProtection run. The <code>TemporalValidity</code> should overlap with the simulation start and end values.</li> <li>In all PPMCalendars, check <code>Application</code> elements' <code>ApplicationWindow</code> date ranges. It is possible that application windows are defined for days/months outside the simulation start and end values set in template.xrun.</li> <li>In all PPMCalendars, check the value of <code>TargetCrops</code>. Verify that this is an integer value and that one or more fields in the scenario have this crop type. In \\xCropProtection\\scenario\\[scenario name]\\geo\\package.xinfo, verify that <code>feature_type_attribute</code> refers to the correct field name. In the same file, verify that <code>base_landscape_geometries</code> refers to the correct shapefile.</li> <li>In all PPMCalendars, check the value of <code>TargetFields</code>. Verify that this is an integer value or list of integers and that one or more fields in the scenario have this ID. In \\xCropProtection\\scenario\\[scenario name]\\geo\\package.xinfo, verify that <code>feature_id_attribute</code> refers to the correct field name. In the same file, verify that <code>base_landscape_geometries</code> refers to the correct shapefile.</li> </ul>"},{"location":"xLandscape/reference/troubleshooting.html#valueerror-empty-range","title":"ValueError: empty range","text":"<pre><code>ValueError: empty range for randrange() (359, 6, -353)\n</code></pre> <p>Explanation:</p> <p>The dates of an <code>ApplicationWindow</code> are outside of the allowable range.</p> <p>Possible solutions:</p> <ul> <li>xCropProtection does not support <code>ApplicationWindow</code> ranges that span between multiple years (e.g. December to January).</li> <li>Check the value of all <code>ApplicationWindow</code> elements to be sure that the month that comes first in the year is listed first in the date range. For example, a window of 10-14 to 05-21 would produce this error because xCropProtection interprets this window as October 14th to May 21st, which is invalid.</li> <li>Check that the format of <code>ApplicationWindow</code> date ranges are in the format mm-dd to mm-dd.</li> </ul>"},{"location":"xLandscape/reference/troubleshooting.html#valueerror-probability-sum","title":"ValueError: probability sum","text":"<pre><code>ValueError: Probability sum is not 1.0!\n</code></pre> <p>Explanation:</p> <p>The sum of probability values in one of the choice distributions defined in a PPMCalendar does not equal 1.0.</p> <p>Possible solutions:</p> <ul> <li>Check the probability values in all PPMCalendars to ensure they sum to 1.0.</li> <li>xCropProtection allows a small amount of error when calculating the sum of a choice distribution's probability values. The sum is rounded to 5 decimal places to prevent floating-point arithmetic errors that may occur when adding floating-point values in python. Further explanation can be found on the Python.org website.</li> </ul>"}]}